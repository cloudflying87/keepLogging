{"version":3,"sources":["components/Button/index.js","components/Input/index.js","utils/API.js","pages/Signup.js","components/Nav/index.js","components/AddFlightForm/index.js","components/Table/index.js","components/Modal/index.js","components/Chart/index.js","components/TotalsDisplay/index.js","utils/UserContext.js","components/search/index.js","pages/Logbook.js","pages/Training.js","components/AircraftDisplay/index.js","components/AddAircraftForm/index.js","pages/Aircraft.js","components/ViewAirport/index.js","components/map/Map.jsx","pages/Airports.js","pages/MyProfile.js","pages/Validate.js","App.js","serviceWorker.js","index.js","logoSmall.png"],"names":["Button","text","handleClick","btnId","btnClass","onClick","id","className","Input","label","labelFor","name","type","inputId","inputClass","placeholder","handleInputChange","value","size","htmlFor","onChange","tail","axios","post","get","icao","airport","date","lat","long","_i","flightData","put","delete","userData","email","key","studentID","ID","loggedInUser","instructorID","Signup","props","useState","password","state","setState","useEffect","target","e","preventDefault","API","then","res","history","push","catch","err","error","data","message","Nav","children","open","width","window","innerWidth","setWidth","addEventListener","_","removeEventListener","src","logo","alt","burger","document","querySelector","classList","toggle","to","AddFlightForm","handleFormInput","handleAddFlight","setAircraft","aircraftList","setOpen","customStyles","option","provided","color","isSelected","control","height","singleValue","opacity","isDisabled","transition","CSSTransition","in","timeout","classNames","onEnter","options","styles","route","rows","cols","comments","flightNum","depTime","arrTime","iap","holds","landings","dayLdg","nightLdg","total","cxt","night","imc","hood","pic","sic","cfi","dualI","solo","Table","openModal","flights","showTable","setShowTable","unmountOnExit","length","Object","keys","filter","x","map","i","Date","Aircraft","Route","Comments","Total","Modal","openEdit","deleteBtn","results","instructor","student","Chart","totals","filteredTotals","pieTotals","PIC","SIC","CFI","barData","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","values","pieData","maintainAspectRatio","TotalsDisplay","UserContext","createContext","userId","SearchDates","handleReset","startDate","endDate","airportLoc","distNum","crossCountryTrue","Logbook","btnClicked","fullResults","mapped","mappedOriginal","moment","format","crossCountry","logbookForm","setlogbookForm","modal","setModal","user","setUser","getFlights","console","getAircraftTypes","log","location","href","AircraftId","searchDates","utc","searchMapped","resetMapped","rawResults","uniqueId","includes","filteredResultsSorted","a","sort","b","workingTimeDistance","undefined","alert","workingTimes","findDistance","calcTime","eachAirport","split","getLatLong","objectArray","parseFloat","y","distance","lat1","lon1","lat2","lon2","Math","PI","lonDelta","pow","cos","sin","angle","atan2","sqrt","departTimeDate","arrTimeDate","tdDate","userDate","departTime","momentMillie","duration","diff","timeCalc","convertToHoursMM","_milliseconds","nighttimeGather","sunTimesArr","depart","arrive","numofAirport","sunTimes","depRise","depSet","arrRise","arrSet","nightTime","isBefore","isAfter","dawnCalc","dawn","sunriseCalc","sunrise","sunsetCalc","sunset","duskCalc","dusk","msec","hh","floor","mm","toFixed","logFlight","nullChecked","forEach","UserId","setlogbookFormBlank","editFlight","prev","tailNumber","aircraftId","openAccordion","Provider","selected","find","parseInt","newLog","prevModal","scrollTo","arg","switchFunc","Training","studentEmail","setStudentEmail","invalidSubmission","setInvalidSubmission","onSubmit","event","matchingStudent","DuplicateAccess","AircraftDisplay","aircraft","description","AddAircraft","addT","allModels","userCurrentAircraft","modelId","getCurrentTypes","getAllTypes","formattedResults","manufacture_code","category_class","addTail","AircraftModelId","ViewAirport","getMapOptions","maps","scaleControl","gestureHandling","disableDoubleClickZoom","minZoom","maxZoom","mapTypeControl","mapTypeId","MapTypeId","SATELLITE","mapTypeControlOptions","style","MapTypeControlStyle","HORIZONTAL_BAR","position","ControlPosition","BOTTOM_CENTER","mapTypeIds","ROADMAP","HYBRID","zoomControl","Map","zoomLevel","bootstrapURLKeys","process","center","zoom","Airports","google","iata","city","country","lon","elevation","airportInfo","printState","MyProfile","Validate","match","params","App","exact","path","component","Redirect","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.34f394d9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css'\r\n\r\nconst Button = ({ text, handleClick, btnId, btnClass }) => {\r\n\r\n\r\n\r\n    return (\r\n        <button\r\n        onClick={handleClick}\r\n        id={btnId}\r\n        className={btnClass}\r\n        >\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst Input = ({ label, labelFor, name, type, inputId, inputClass, placeholder, handleInputChange, value, size }) => {\r\n    return (\r\n        <>\r\n            <label\r\n                htmlFor={labelFor}\r\n            >\r\n                {label}\r\n            </label>\r\n            <input\r\n                name={name}\r\n                type={type}\r\n                id={inputId}\r\n                className={inputClass}\r\n                placeholder={placeholder}\r\n                onChange={handleInputChange}\r\n                value={value}\r\n                size={size}\r\n            />\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nexport default Input;","import axios from 'axios';\r\n\r\nexport default {\r\n    // aircraft routes -----------------------------------------------------\r\n    //get all aircraft\r\n    getAircraft: function () {\r\n        return axios.get('api/aircraft/');\r\n    },\r\n    // selecting one aircraft\r\n    getOneAircraft: function (id) {\r\n        return axios.get('/api/aircraft/' + id);\r\n    },\r\n    // create an aiarcraft\r\n    createAircraft: function (tail) {\r\n        return axios.post('/api/aircraft/' , tail);\r\n    },\r\n    // update an aircraft\r\n    updateAircraft: function (id) {\r\n        return axios.put('/api/aircraft/update/' + id);\r\n    },\r\n    // delete an aircraft\r\n    deleteAircraft: function (id) {\r\n        return axios.delete('/api/aircraft/delte/' + id);\r\n    },\r\n    // translate aircraft type into id\r\n    getAircraftId: function (aircraftType) {\r\n        return axios.get('/api/aircraft/userFind/' + aircraftType);\r\n    },\r\n    // putting aircraft types in a list for our dropdown menu\r\n    getAircraftTypes: function () {\r\n        return axios.get('api/aircraftTypes/');\r\n    },\r\n    getAircraftModels: function () {\r\n        return axios.get('api/aircraftModels/');\r\n    },\r\n    // airport routes --------------------------------------------------------\r\n    // all airports\r\n\r\n    getAirports: function (icao) {\r\n        return axios.get('/api/airport/' + icao.airport);\r\n    },\r\n    // get airport by id\r\n    getOneAirport: function (id) {\r\n        return axios.get('/api/airports/' + id);\r\n    },\r\n    // create an airport\r\n    createAirport: function () {\r\n        return axios.post('/api/airport');\r\n    },\r\n    // update airport\r\n    updateAirport: function (id) {\r\n        return axios.put('/api/airports/' + id);\r\n    },\r\n\r\n    sunriseSunset: function (date, lat, long) {\r\n        return axios.get('/api/nighttime?date=' + date._i + '&lat=' + lat + '&long=' + long);\r\n    },\r\n    deleteAirport: function (id) {\r\n        return axios.delete('/api/airports/delete/' + id);\r\n    },\r\n    // flight_time routes ----------------------------------------------------------------\r\n    // get all flight_times for the user\r\n    getFlights: function () {\r\n        return axios.get('/api/flight_time/');\r\n    },\r\n    // select one flight_time\r\n    getOneFlight: function (userId, id) {\r\n        return axios.get(`/api/flight_time/${userId}/${id}`);\r\n    },\r\n    // create a flight_time\r\n\r\n    createFlight: function (flightData) {\r\n        return axios.post('/api/flight_time', (flightData));\r\n    },\r\n    // update a flight_time\r\n    updateFlight: function (id, flightData) {\r\n        return axios.put('/api/flight_time/update/' + id, flightData);\r\n    },\r\n    // delete a flight_time\r\n    deleteFlight: function (id) {\r\n        return axios.delete(`/api/flight_time/delete/${id}`);\r\n    },\r\n    // get flight_time totals\r\n    getFlightTotals: function () {\r\n        return axios.get('/api/flight_times/totals/');\r\n    },\r\n\r\n    // -------------------------------------------------------------------------------\r\n    // user login routes\r\n    //login user\r\n    userLogin: function (userData) {\r\n        return axios.post('/api/login', userData);\r\n    },\r\n    // sign up a user\r\n    userSignUp: function (userData) {\r\n        return axios.post('/api/signup', userData);\r\n    },\r\n    // log out a user\r\n    userLogOut: function () {\r\n        return axios.get('/logout');\r\n    },\r\n    // getting user data to be used client side\r\n    userData: function () {\r\n        return axios.get('/api/user_data');\r\n    },\r\n    userVerify: function (email) {\r\n        return axios.post('/api/verifyAccount', email);\r\n    },\r\n    userAccess: function (key, studentID) {\r\n        return axios.post('/api/addAccess', key, studentID);\r\n    },\r\n    sendMail: function (email, ID, loggedInUser) {\r\n        return axios.post('/api/sendMail', email, ID, loggedInUser);\r\n    },\r\n    redirect: function (validationKey, studentEmail) {\r\n        return axios.get(`/redirect/${validationKey}/${studentEmail}`);\r\n    },\r\n    checkDuplicates: function (instructorID, studentID) {\r\n        return axios.post('/api/checkDuplicates', instructorID, studentID);\r\n    },\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from '../components/Button/index';\r\nimport Input from '../components/Input/index';\r\nimport API from '../utils/API';\r\nimport './signup.css'\r\n\r\nconst Signup = props => {\r\n\r\n    const [state, setState] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n\r\n\r\n    const handleSignup = e => {\r\n        e.preventDefault();\r\n        \r\n        API.userSignUp({\r\n            email: state.email, \r\n            password: state.password\r\n        })\r\n        .then(res => {\r\n            props.history.push('/logbook')})\r\n        .catch(err => {\r\n            setState(state=>({\r\n                ...state,\r\n                error: err\r\n            }))\r\n        })\r\n    };\r\n\r\n    const handleLogin = e => {\r\n        e.preventDefault();\r\n        \r\n        API.userLogin({\r\n            email: state.email, \r\n            password: state.password\r\n        })\r\n        .then(({data}) =>{\r\n            props.history.push('/logbook');\r\n        })\r\n        .catch(err => {\r\n            setState(state=>({\r\n                ...state,\r\n                error: err\r\n            }))\r\n        })\r\n    };\r\n\r\n    // takes form data and updates state with appropriate values\r\n    const handleInputChange = ({ target: { value, name } }) => {\r\n        setState(state => ({\r\n            ...state,\r\n            [name]: value\r\n        }))\r\n    };\r\n\r\n\r\n    return (\r\n        <main className='signupWrapper'>\r\n            <form className='signupForm'>\r\n                <div className='formDiv1'>\r\n                    <Input\r\n                        label='email'\r\n                        labelFor='email'\r\n                        type='text'\r\n                        inputId='email'\r\n                        placeholder='email'\r\n                        handleInputChange={handleInputChange}\r\n                        name='email'\r\n                        className='inputBox'\r\n                        />\r\n                    <Input\r\n                        label='password'\r\n                        labelFor='password'\r\n                        type='password'\r\n                        inputId='password'\r\n                        placeholder='Password'\r\n                        handleInputChange={handleInputChange}\r\n                        name='password'\r\n                        className='inputBox'\r\n                    />\r\n                </div>\r\n                <div className='formDiv2'>\r\n                    <Button\r\n                        text=\"Sign up\"\r\n                        btnId='signUp'\r\n                        btnClass='authBtn'\r\n                        handleClick={handleSignup}\r\n                    />\r\n                    <Button\r\n                        text=\"Log in\"\r\n                        btnId='logIn'\r\n                        btnClass='authBtn'\r\n                        handleClick={handleLogin}\r\n                    />\r\n                </div>\r\n\r\n            </form>\r\n            {\r\n                state.error && <h1>{state.error.message}</h1>\r\n            }\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Signup;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport logo from '../../logoSmall.png';\r\nimport Button from '../Button/index';\r\nimport API from '../../utils/API';\r\n\r\nconst Nav = ({ children }) => {\r\n\r\n    const [state, setState] = useState({\r\n        open: false,\r\n        width: window.innerWidth\r\n    });\r\n\r\n    useEffect(() => {\r\n        // set width function\r\n        function setWidth() {\r\n            setState(state => ({\r\n                ...state,\r\n                width: window.innerWidth\r\n            }))\r\n        }\r\n        // sets width when window is resized\r\n        window.addEventListener('resize', setWidth);\r\n\r\n        // clean up dependencies\r\n        return _ => {\r\n            window.removeEventListener('resize', setWidth);\r\n        }\r\n        // keep sate.width and state.open updated\r\n    }, [state.width, state.open])\r\n\r\n    // on click for hamburger menu\r\n    const toggleNav = () => {\r\n        setState(state => ({\r\n            ...state,\r\n            open: !state.open\r\n        }))\r\n        const burger = document.querySelector('i');\r\n        const navList = document.querySelector('ul');\r\n        // show nav list\r\n        navList.classList.toggle('navActive')\r\n        // toggle between hamburger menu bars and X\r\n        burger.classList.toggle('fa-times');\r\n        burger.classList.toggle('fa-bars');\r\n    }\r\n\r\n\r\n    // if (children.location.pathname === '/') \r\n    //     return false;\r\n\r\n    return (\r\n        <nav>\r\n            <div className='logoDiv'>\r\n                <img src={logo} alt='keep_logging logo' />\r\n                <div className='burger'>\r\n                    <i\r\n                        className=\"fas fa-bars\"\r\n                        onClick={toggleNav}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <ul className=\"navList\">\r\n                <li>\r\n                    <Link\r\n                        to='/logbook'\r\n                    >\r\n                        Logbook\r\n                     </Link>\r\n                </li>\r\n                <li>\r\n                    <Link\r\n                        to='/aircraft'\r\n                    >\r\n                        Aircraft\r\n                     </Link>\r\n                </li>\r\n                <li>\r\n                    <Link\r\n                        to='/airports'\r\n                    >\r\n                        Airports\r\n                     </Link>\r\n                </li>\r\n                <li>\r\n                    <Link\r\n                        to='/training'\r\n                    >\r\n                        Training\r\n                     </Link>\r\n                </li>\r\n                <li>\r\n                    <Link\r\n                        to='/myProfile'>\r\n                        My Profile\r\n                     </Link>\r\n                </li>\r\n                <li>\r\n                    <Link\r\n                        onClick={()=> API.userLogOut()}\r\n                        to='/'>\r\n                        Logout\r\n                     </Link>\r\n                </li>\r\n                {/* <li>\r\n                    \r\n                    <Button\r\n                        text='Logout'\r\n                        btnId='logout'\r\n                        btnClass='menuBtn'\r\n                        handleClick={(e) => {\r\n                            API.userLogOut()\r\n                                .then(window.location.href = \"/\")\r\n                                .catch(err => console.error(err))\r\n                        }}\r\n                    />\r\n                </li> */}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Input from '../Input/index';\r\nimport Button from '../Button/index';\r\nimport './style.css'\r\nimport Select from 'react-select'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nconst AddFlightForm = ({ handleFormInput, handleAddFlight, handleClick, value, setAircraft, text, aircraftList }) => {\r\n    const [open, setOpen] = useState(false)\r\n    useEffect(() => {\r\n        setOpen(true)\r\n    }, [])\r\n    const customStyles = {\r\n        option: (provided, state) => ({\r\n            ...provided,\r\n            color: state.isSelected && 'blue',\r\n        }),\r\n        control: (provided, state) => ({\r\n            ...provided,\r\n            width: 'auto',\r\n            height: '15px',\r\n            color: 'purple'\r\n        }),\r\n        singleValue: (provided, state) => {\r\n            const opacity = state.isDisabled ? 0.5 : 1;\r\n            const transition = 'opacity 1300ms';\r\n\r\n            return { ...provided, opacity, transition };\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <CSSTransition\r\n                in={open}\r\n                timeout={1000}\r\n                classNames=\"form\"\r\n                // unmountOnExit\r\n                onEnter={() => setOpen(true)}\r\n                // onExited={() => setOpen(true)}\r\n            >\r\n                <form>\r\n                    <h4 className='header'>General Flight Info</h4>\r\n                    <div className='inputDiv threeboxes'>\r\n                        <Input\r\n                            labelFor='date'\r\n                            label='Date'\r\n                            name='date'\r\n                            type='date'\r\n                            inputId='dateInput'\r\n                            inputClass='addFlightInput'\r\n                            placeholder='date'\r\n                            handleInputChange={handleFormInput}\r\n                            // value={logbookForm.date}\r\n                            value={value.date}\r\n                        />\r\n                        {/* <Input\r\n                        labelFor='aircraftType'\r\n                        label='Aircraft Type'\r\n                        name='aircraftType'\r\n                        type='list'\r\n                        inputId='aircraftTypeInput'\r\n                        inputClass='addFlightInput'\r\n                        placeholder='Aircraft Type'\r\n                        handleInputChange={handleFormInput}\r\n                        value={value.aircraftType}\r\n                    /> */}\r\n                        {/* <DropdownList\r\n                        data={value.aircraftType}\r\n                        valueField='id'\r\n                        textField='name'\r\n                        defaultValue={1}\r\n                    /> */}\r\n                        <Select\r\n                            options={value.aircraftList}\r\n                            labelFor='aircraftType'\r\n                            label='Aircraft Type'\r\n                            name='aircraftType'\r\n                            inputId='aircraftTypeInput'\r\n                            inputClass='addFlightInput dropdown'\r\n                            placeholder={!!value['Aircraft.tailNumber'] ? value['Aircraft.tailNumber'] : 'Aircraft Type'}\r\n                            width='200px'\r\n                            // defaultValue = {value.aircraftList[1]}\r\n                            styles={customStyles}\r\n                            onChange={setAircraft}\r\n                        />\r\n                        <Input\r\n                            labelFor='route'\r\n                            label='Route'\r\n                            name='route'\r\n                            type='text'\r\n                            inputId='routeInput'\r\n                            inputClass='addFlightInput'\r\n                            placeholder='Route'\r\n                            handleInputChange={handleFormInput}\r\n                            value={value.route}\r\n                        />\r\n                    </div>\r\n                    <div className='commentsDiv'>\r\n                        <textarea\r\n                            label='Comments'\r\n                            name='comments'\r\n                            type='text-area'\r\n                            id='commentsInput'\r\n                            className='addFlightInput'\r\n                            placeholder='comments'\r\n                            onChange={handleFormInput}\r\n                            rows={4}\r\n                            cols={40}\r\n                            value={value.comments}\r\n                        />\r\n                    </div>\r\n                    <div className='inputDiv gfi3'>\r\n                        <Input\r\n                            labelFor='flightNum'\r\n                            label='Flight Number'\r\n                            name='flightNum'\r\n                            type='text'\r\n                            inputId='flightNumberInput'\r\n                            inputClass='addFlightInput'\r\n                            placeholder='Flight Num'\r\n                            handleInputChange={handleFormInput}\r\n                            size={6}\r\n                            value={value.flightNum}\r\n                        />\r\n                        <Input\r\n                            labelFor='depTime'\r\n                            label='Dep Time'\r\n                            name='depTime'\r\n                            type='text'\r\n                            inputId='departureTimeInput'\r\n                            inputClass='addFlightInput'\r\n                            placeholder='Dep Time'\r\n                            handleInputChange={handleFormInput}\r\n                            size={6}\r\n                            value={value.depTime}\r\n                        />\r\n                        <Input\r\n                            labelFor='arrTime'\r\n                            label='Arr Time'\r\n                            name='arrTime'\r\n                            type='text'\r\n                            inputId='arrivalTimeInput'\r\n                            inputClass='addFlightInput'\r\n                            placeholder='Arr Time'\r\n                            handleInputChange={handleFormInput}\r\n                            size={6}\r\n                            value={value.arrTime}\r\n\r\n                        />\r\n                        <Button\r\n                            text='Auto Fill'\r\n                            btnId='autoFill'\r\n                            className='formBtn'\r\n                            handleClick={handleClick}\r\n                        />\r\n                    </div>\r\n                    <h4 className='header'>Approaches and Landings</h4>\r\n                    <div className='appLandDiv'>\r\n                        <Input\r\n                            labelFor='iap'\r\n                            label='Approach'\r\n                            name='iap'\r\n                            type='text'\r\n                            inputId='approachInput'\r\n                            inputClass='addFlightInput'\r\n                            placeholder='Approach'\r\n                            handleInputChange={handleFormInput}\r\n                            size={4}\r\n                            value={value.iap}\r\n                        />\r\n                        <Input\r\n                            labelFor='holds'\r\n                            label='hold'\r\n                            name='holds'\r\n                            type='text'\r\n                            inputId='holdInput'\r\n                            inputClass='addFlightInput'\r\n                            placeholder='Hold'\r\n                            handleInputChange={handleFormInput}\r\n                            size={2}\r\n                            value={value.holds}\r\n\r\n                        />\r\n                        <Input\r\n                            labelFor='landings'\r\n                            label='landings'\r\n                            name='landings'\r\n                            type='text'\r\n                            inputId='landingsInput'\r\n                            inputClass='addFlightInput'\r\n                            placeholder='Landings'\r\n                            handleInputChange={handleFormInput}\r\n                            size={4}\r\n                            value={value.landings}\r\n\r\n                        />\r\n                        <Input\r\n                            labelFor='dayLdg'\r\n                            label='dayLandings'\r\n                            name='dayLdg'\r\n                            type='text'\r\n                            inputId='dayLandingsInput'\r\n                            inputClass='addFlightInput'\r\n                            placeholder='Day Landings'\r\n                            handleInputChange={handleFormInput}\r\n                            size={4}\r\n                            value={value.dayLdg}\r\n\r\n                        />\r\n                        <Input\r\n                            labelFor='nightLdg'\r\n                            label='nightLandings'\r\n                            name='nightLdg'\r\n                            type='text'\r\n                            inputId='nightLandingsInput'\r\n                            inputClass='addFlightInput'\r\n                            placeholder='Night Landings'\r\n                            handleInputChange={handleFormInput}\r\n                            size={4}\r\n                            value={value.nightLdg}\r\n\r\n                        />\r\n                    </div>\r\n                    <h4 className='header'>Times</h4>\r\n                    <div>\r\n                        <div className='timesDivRow1'>\r\n                            <Input\r\n                                labelFor='total'\r\n                                label='total'\r\n                                name='total'\r\n                                type='text'\r\n                                inputId='totalInput'\r\n                                inputClass='addFlightInput'\r\n                                placeholder='Total'\r\n                                handleInputChange={handleFormInput}\r\n                                size={3}\r\n                                value={value.total}\r\n                            />\r\n                            <Input\r\n                                labelFor='cxt'\r\n                                label='crossCountry'\r\n                                name='cxt'\r\n                                type='text'\r\n                                inputId='crossCountryInput'\r\n                                inputClass='addFlightInput'\r\n                                placeholder='xCountry'\r\n                                handleInputChange={handleFormInput}\r\n                                size={3}\r\n                                value={value.cxt}\r\n                            />\r\n                            <Input\r\n                                labelFor='night'\r\n                                label='night'\r\n                                name='night'\r\n                                type='text'\r\n                                inputId='nightInput'\r\n                                inputClass='addFlightInput'\r\n                                placeholder='Night'\r\n                                handleInputChange={handleFormInput}\r\n                                size={3}\r\n                                value={value.night}\r\n                            />\r\n                            <Input\r\n                                labelFor='imc'\r\n                                label='imc'\r\n                                name='imc'\r\n                                type='text'\r\n                                inputId='imcInput'\r\n                                inputClass='addFlightInput'\r\n                                placeholder='IMC'\r\n                                handleInputChange={handleFormInput}\r\n                                size={3}\r\n                                value={value.imc}\r\n\r\n                            />\r\n                            <Input\r\n                                labelFor='hood'\r\n                                label='hood'\r\n                                name='hood'\r\n                                type='text'\r\n                                inputId='hoodInput'\r\n                                inputClass='addFlightInput'\r\n                                placeholder='Hood'\r\n                                handleInputChange={handleFormInput}\r\n                                size={3}\r\n                                value={value.hood}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className='timesDivRow2'>\r\n                            <Input\r\n                                labelFor='pic'\r\n                                label='pic'\r\n                                name='pic'\r\n                                type='text'\r\n                                inputId='picInput'\r\n                                inputClass='addFlightInput'\r\n                                placeholder='PIC'\r\n                                handleInputChange={handleFormInput}\r\n                                size={3}\r\n                                value={value.pic}\r\n\r\n                            />\r\n                            <Input\r\n                                labelFor='sic'\r\n                                label='sic'\r\n                                name='sic'\r\n                                type='text'\r\n                                inputId='sicInput'\r\n                                inputClass='addFlightInput'\r\n                                placeholder='SIC'\r\n                                handleInputChange={handleFormInput}\r\n                                size={3}\r\n                                value={value.sic}\r\n\r\n                            />\r\n                            <Input\r\n                                labelFor='cfi'\r\n                                label='cfi'\r\n                                name='cfi'\r\n                                type='text'\r\n                                inputId='cfiInput'\r\n                                inputClass='addFlightInput'\r\n                                placeholder='CFI'\r\n                                handleInputChange={handleFormInput}\r\n                                size={3}\r\n                                value={value.cfi}\r\n\r\n                            />\r\n                            <Input\r\n                                labelFor='dualI'\r\n                                label='dual'\r\n                                name='dualI'\r\n                                type='text'\r\n                                inputId='dualInput'\r\n                                inputClass='addFlightInput'\r\n                                placeholder='Dual'\r\n                                handleInputChange={handleFormInput}\r\n                                size={3}\r\n                                value={value.dualI}\r\n\r\n                            />\r\n                            <Input\r\n                                labelFor='solo'\r\n                                label='solo'\r\n                                name='solo'\r\n                                type='text'\r\n                                inputId='soloInput'\r\n                                inputClass='addFlightInput'\r\n                                placeholder='Solo'\r\n                                handleInputChange={handleFormInput}\r\n                                size={3}\r\n                                value={value.solo}\r\n\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='btnWrapper'>\r\n                        <Button\r\n                            text={text}\r\n                            btnId='createFlightBtn'\r\n                            className='formBtn'\r\n                            handleClick={handleAddFlight}\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </CSSTransition>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddFlightForm;","import React, { useState, useEffect } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './style.css'\r\n\r\nconst Table = ({ openModal, flights }) => {\r\n\r\n    const [showTable, setShowTable] = useState()\r\n\r\n    useEffect(() => {\r\n        setShowTable(true)\r\n    }, [])\r\n    return (\r\n        <>\r\n            <CSSTransition\r\n                in={showTable}\r\n                timeout={2000}\r\n                className='enter'\r\n                unmountOnExit\r\n            >\r\n                <div className='table'>\r\n                    <div className='tableHeader'>\r\n                        {\r\n                            !!flights.length &&\r\n                            Object.keys(flights[0]).filter(x => x !== 'id').map((x, i) => <h5 key={i} className={'col' + i} name={x}>{x}</h5>)\r\n                        }\r\n                    </div>\r\n                    <div className='tableBody'>\r\n                        {\r\n                            !!flights.length &&\r\n                            flights.map((x, i) => <div key={i + '-row'} id={x.id} className='tableCol' onClick={openModal}>\r\n                                <div className='dateCol' id={x.id}>{x.Date}</div>\r\n                                <div className='aircraftCol' id={x.id}>{x.Aircraft}</div>\r\n                                <div className='routeCol' id={x.id}>{x.Route}</div>\r\n                                <div className='commentsCol' id={x.id}>{x.Comments}</div>\r\n                                <div className='totalCol' id={x.id}>{x.Total}</div>\r\n                            </div>)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\nimport Button from '../Button/index';\r\nimport './style.css'\r\n\r\nconst Modal = ({ handleClick, openEdit, deleteBtn, results }) => {\r\n    \r\n    return (\r\n        <div className='modal'>\r\n            <div className='modalContent'>\r\n                <Button\r\n                    btnClass='modalBtn'\r\n                    btnId='closeModal'\r\n                    text='X'\r\n                    handleClick={handleClick}\r\n                />\r\n\r\n                <ul className='modalUl'>\r\n\r\n                    <li className='modalLi'><strong>Date:</strong> {results.date}</li>\r\n\r\n                    {!!results['Aircraft.tailNumber'] &&\r\n                        <li className='modalLi'><strong>Aircraft:</strong> {results['Aircraft.tailNumber']}</li>}\r\n\r\n                    {!!results.route && <li className='modalLi'><strong>Route:</strong> {results.route}</li>}\r\n\r\n                    {!!results.flightNum && <li className='modalLi'><strong>Flight Number</strong> {results.flightNum}</li>}\r\n\r\n                    {!!results.landings && <li className='modalLi'><strong>Landings:</strong> {results.landings}</li>}\r\n\r\n                    {!!results.imc && <li className='modalLi'><strong>IMC:</strong> {results.imc}</li>}\r\n\r\n                    {!!results.hood && <li className='modalLi'><strong>Hood:</strong> {results.hood}</li>}\r\n\r\n                    {!!results.iap && <li className='modalLi'><strong>IAP:</strong> {results.iap}</li>}\r\n\r\n                    {!!results.holds && <li className='modalLi'><strong>Holds:</strong> {results.holds}</li>}\r\n\r\n                    {!!results.pic && <li className='modalLi'><strong>PIC:</strong> {results.pic}</li>}\r\n\r\n                    {!!results.sic && <li className='modalLi'><strong>SIC:</strong> {results.sic}</li>}\r\n\r\n                    {!!results.cfi && <li className='modalLi'><strong>CFI:</strong> {results.cfi}</li>}\r\n\r\n                    {!!results.dualI && <li className='modalLi'><strong>Dual:</strong> {results.cfi}</li>}\r\n\r\n                    {!!results.cxt && <li className='modalLi'><strong>Cross Country:</strong> {results.cxt}</li>}\r\n\r\n                    {!!results.solo && <li className='modalLi'><strong>Solo:</strong> {results.solo}</li>}\r\n\r\n                    {!!results.total && <li className='modalLi'><strong>Total:</strong> {results.total}</li>}\r\n\r\n                    {!!results.dayLdg && <li className='modalLi'><strong>Day Landings:</strong> {results.dayLdg}</li>}\r\n\r\n                    {!!results.night && <li className='modalLi'><strong>Night:</strong> {results.night}</li>}\r\n\r\n                    {!!results.nightLdg && <li className='modalLi'><strong>Night Landings:</strong> {results.nightLdg}</li>}\r\n\r\n                    {!!results.instructor && <li className='modalLi'><strong>Instructor:</strong> {results.instructor}</li>}\r\n\r\n                    {!!results.student && <li className='modalLi'><strong>Student:</strong> {results.student}</li>}\r\n\r\n\r\n                </ul>\r\n                <Button\r\n\r\n                    text='Edit'\r\n                    btnId='editBtn'\r\n                    className='editAndDeleteBtns'\r\n                    handleClick={() => openEdit(results.id)}\r\n                />\r\n                <Button\r\n                    text='Delete'\r\n                    btnId='deleteBtn'\r\n                    className='editAndDeleteBtns'\r\n                    handleClick={()=> deleteBtn(results.id)}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react'\r\nimport { Bar, Pie } from 'react-chartjs-2';\r\n\r\nconst Chart = ({ totals }) => {\r\n\r\n    const filteredTotals = {\r\n        'xCountry': totals.cxt,\r\n        pic: totals.pic,\r\n        sic: totals.sic,\r\n        cfi: totals.cfi,\r\n        dualI: totals.dualI,\r\n        solo: totals.solo,\r\n        total: totals.total,\r\n        night: totals.night\r\n    }\r\n\r\n    const pieTotals = {\r\n        PIC: totals.pic,\r\n        SIC: totals.sic,\r\n        CFI: totals.cfi,\r\n        'Dual I': totals.dualI\r\n    }\r\n\r\n    const barData = {\r\n        labels: Object.keys(filteredTotals),\r\n        datasets: [\r\n            {\r\n                label: 'Hours',\r\n                backgroundColor: 'rgba(255,255,255,.8)',\r\n                borderColor: 'rgba(0,26,200,1)',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n                hoverBorderColor: 'rgba(255,99,132,1)',\r\n                data: Object.values(filteredTotals)\r\n            }\r\n        ]\r\n    };\r\n\r\n    const pieData = {\r\n        labels: Object.keys(pieTotals),\r\n        datasets: [{\r\n            data: Object.values(pieTotals),\r\n            backgroundColor: [\r\n            '#FF6384',\r\n            '#36A2EB',\r\n            '#FFCE56'\r\n            ],\r\n            hoverBackgroundColor: [\r\n            '#FF6384',\r\n            '#36A2EB',\r\n            '#FFCE56'\r\n            ]\r\n        }]\r\n    };\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h2>Totals</h2>\r\n            <Bar\r\n                data={barData}\r\n                options={{\r\n                    maintainAspectRatio: true\r\n                }}\r\n            />\r\n            <h2>Pilot Times</h2>\r\n            <Pie data={pieData} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Chart from '../Chart/index';\r\nimport './style.css'\r\n\r\nconst TotalsDisplay = ({totals}) => {\r\n\r\n    return (\r\n        <div className='totalsList'>\r\n            <Chart totals={totals} />\r\n            {\r\n                <ul >\r\n                    {!!totals.cxt &&\r\n                        <li><strong>Cross Country</strong> {totals.cxt}</li>}\r\n                    {!!totals.night &&\r\n                        <li><strong>Night</strong> {totals.night}</li>}\r\n                    {!!totals.imc &&\r\n                        <li><strong>IMC</strong> {totals.imc}</li>}\r\n                    {!!totals.hood &&\r\n                        <li><strong>Simulated Instrument</strong> {totals.hood}</li>}\r\n                    {!!totals.iap &&\r\n                        <li><strong>Instrument Approaches</strong> {totals.iap}</li>}\r\n                    {!!totals.holds &&\r\n                        <li><strong>Holds</strong> {totals.holds}</li>}\r\n                    {!!totals.dayLdg &&\r\n                        <li><strong>Day Landings</strong> {totals.dayLdg}</li>}\r\n                    {!!totals.nightLdg &&\r\n                        <li><strong>Night Landings</strong> {totals.nightLdg}</li>}\r\n                    {!!totals.solo &&\r\n                        <li><strong>Solo</strong> {totals.solo}</li>}\r\n                    {!!totals.dualI &&\r\n                        <li><strong>Instruction Received</strong> {totals.dualI}</li>}\r\n                    {!!totals.pic &&\r\n                        <li><strong>PIC</strong> {totals.pic}</li>}\r\n                    {!!totals.sic &&\r\n                        <li><strong>SIC</strong> {totals.sic}</li>}\r\n                    {!!totals.cfi &&\r\n                        <li><strong>CFI</strong> {totals.cfi}</li>}\r\n                    {!!totals.total &&\r\n                        <li><strong>Total</strong> {totals.total}</li>}\r\n                </ul>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TotalsDisplay;","import React, { createContext } from 'react';\r\n\r\nconst UserContext = createContext({\r\n    userId: ''\r\n});\r\n\r\nexport default UserContext;","import React from 'react';\r\nimport Input from '../Input/index';\r\nimport Button from '../Button/index';\r\nimport './style.css'\r\n\r\n\r\n\r\nconst SearchDates = ({ handleClick, handleReset, handleFormInput, value }) => {\r\n\r\n    return (\r\n        <div>\r\n            <h2>Enter date range for flights</h2>\r\n                <div className='searchDiv'>\r\n                \r\n                    <Input\r\n                        labelFor='startDate'\r\n                        label='startDate'\r\n                        name='startDate'\r\n                        type='date'\r\n                        inputId='startDate'\r\n                        inputClass='searchDates'\r\n                        placeholder='Enter ICAO Identifier'\r\n                        handleInputChange={handleFormInput}\r\n                        onChange={handleFormInput}\r\n                        value={value.startDate}\r\n                    />\r\n                    <Input\r\n                        labelFor='endDate'\r\n                        label='endDate'\r\n                        name='endDate'\r\n                        type='date'\r\n                        inputId='endDate'\r\n                        inputClass='searchDates'\r\n                        placeholder='Enter ICAO Identifier'\r\n                        handleInputChange={handleFormInput}\r\n                        onChange={handleFormInput}\r\n                        value={value.endDate}\r\n                    />\r\n                    <Button\r\n                        text='Search'\r\n                        btnId='search'\r\n                        className='searchBtn'\r\n                        handleClick={handleClick}\r\n                    />\r\n                    <Button\r\n                        text='Reset'\r\n                        btnId='reset'\r\n                        className='searchBtn'\r\n                        handleClick={handleReset}\r\n                    />\r\n                </div>\r\n                \r\n                \r\n                \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchDates;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from '../components/Button/index';\r\nimport Nav from '../components/Nav/index';\r\nimport AddFlightForm from '../components/AddFlightForm/index';\r\nimport Table from '../components/Table/index';\r\nimport Modal from '../components/Modal/index';\r\nimport TotalsDisplay from '../components/TotalsDisplay/index';\r\nimport API from '../utils/API';\r\nimport UserContext from '../utils/UserContext';\r\nimport moment from 'moment'\r\nimport SearchDates from '../components/search/index'\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './logbook.css'\r\nimport getAircraftTypesFunction from '../components/AircraftDisplay/function';\r\n\r\nlet airportLoc = [];\r\nlet distNum = [];\r\nlet crossCountryTrue = false;\r\nconst Logbook = () => {\r\n\r\n    const [state, setState] = useState({\r\n        open: false,\r\n        btnClicked: '',\r\n        fullResults: [],\r\n        mapped: [],\r\n        mappedOriginal:[],\r\n        totals: [],\r\n        // userId: ''\r\n    })\r\n    const [logbookForm, setlogbookForm] = useState({\r\n        date: moment().format('YYYY-MM-D'),\r\n        total: '',\r\n        crossCountry: '',\r\n        night: '',\r\n        arrTime: '',\r\n        depTime: '',\r\n        cfi: '',\r\n        comments: '',\r\n        dayLdg: '',\r\n        dualI: '',\r\n        route: '',\r\n        flightNum: '',\r\n        holds: '',\r\n        hood: '',\r\n        iap: '',\r\n        imc: '',\r\n        instructor: '',\r\n        landings: '',\r\n        nightLdg: '',\r\n        pic: '',\r\n        sic: '',\r\n        solo: '',\r\n        student: '',\r\n        total: '',\r\n        cxt: '',\r\n        aircraftId: '',\r\n        aircraftType: '',\r\n        aircraftList: [],\r\n        startDate: '',\r\n        endDate: '',\r\n        'Aircraft.tailNumber': ''\r\n\r\n    })\r\n    // const [aircraftList, setAircraftList] = useState()\r\n    const [modal, setModal] = useState({\r\n        open: false,\r\n        values: []\r\n    });\r\n    const [user, setUser] = useState({\r\n        userId: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        getFlights();\r\n        API.userData()\r\n            .then(res => {\r\n                setUser(({\r\n                    userId: res.data.id\r\n                }))\r\n            })\r\n            .catch(err => {\r\n                console.error(err)\r\n            })\r\n        getAircraftTypes()\r\n    }, [])\r\n\r\n    const getFlights = () => {\r\n        API.getFlights()\r\n            .then((res) => {\r\n                const mapped = res.data.map(x => ({\r\n                    Date: x.date,\r\n                    Aircraft: x['Aircraft.tailNumber'],\r\n                    Route: x.route,\r\n                    Comments: x.comments,\r\n                    Total: x.total,\r\n                    id: x.id\r\n                }))\r\n                setState(state => ({\r\n                    ...state,\r\n                    fullResults: res.data,\r\n                    mappedOriginal:mapped,\r\n                    mapped:mapped\r\n                }))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                window.location.href = '/'\r\n            });\r\n    }\r\n    const setAircraft = (value) => {\r\n        setlogbookForm(logbookForm => ({\r\n            ...logbookForm,\r\n            AircraftId: value.value\r\n        }))\r\n    }\r\n    const searchDates = (e) => {\r\n        e.preventDefault()\r\n        \r\n        let startDate = moment.utc(logbookForm.startDate)\r\n        let endDate = moment.utc(logbookForm.endDate).format('x')\r\n        // moment.utc(searchMapped[0].Date).format('x')\r\n        const searchMapped = state.mappedOriginal.filter(x => {\r\n            \r\n            return (moment.utc(x.Date).format('x') >= startDate && moment.utc(x.Date).format('x') <= endDate)\r\n            \r\n        })\r\n        setState(state => ({\r\n            ...state,\r\n            mapped: searchMapped\r\n        }))\r\n    }\r\n    const resetMapped = (e) => {\r\n        \r\n        setState(state => ({\r\n            ...state,\r\n            mapped: state.mappedOriginal\r\n        }))\r\n    }\r\n    const handleFormInput = ({ target: { value, name } }) => {\r\n        setlogbookForm(logbookForm => ({\r\n            ...logbookForm,\r\n            // date: new Date(),\r\n            [name]: value\r\n        }))\r\n    };\r\n    const getAircraftTypes = () => {\r\n        API.getAircraftTypes()\r\n            .then(({ data }) => {\r\n                let rawResults = []\r\n                let filteredResults = []\r\n                let uniqueId = []\r\n                for (let i = 0; i < data.length; i++) {\r\n                    if (!uniqueId.includes(data[i].AircraftId)) {\r\n                        if (data[i]['Aircraft.tailNumber'] != null) {\r\n                            rawResults.push(data[i])\r\n                            uniqueId.push(data[i].AircraftId)\r\n                        }\r\n                    }\r\n                }\r\n                // console.log()\r\n                filteredResults = rawResults.map((a) => ({\r\n                    value: a.AircraftId,\r\n                    label: a['Aircraft.tailNumber'] + ' ' + a['Aircraft.AircraftModel.description'],\r\n\r\n                }))\r\n                let filteredResultsSorted = filteredResults.sort((a, b) => (a.label > b.label) ? 1 : ((b.label > a.label) ? -1 : 0))\r\n\r\n                setlogbookForm(logbookForm => ({\r\n                    ...logbookForm,\r\n                    aircraftList: filteredResultsSorted\r\n                }))\r\n                // setAircraftList(filteredResultsSorted)\r\n            })\r\n    }\r\n    const workingTimeDistance = async (e) => {\r\n        e.preventDefault();\r\n        if (logbookForm.route === undefined ||\r\n            logbookForm.depTime === undefined ||\r\n            logbookForm.arrTime === undefined) {\r\n            return alert('Need to fill in Route, Departure Time and Arrival Time')\r\n        }\r\n        await workingTimes();\r\n        await findDistance();\r\n        await calcTime();\r\n    }\r\n\r\n    const workingTimes = async () => {\r\n        const eachAirport = logbookForm.route.split(' ')\r\n        for (let i = 0; i < eachAirport.length; i++) {\r\n            await getLatLong(eachAirport[i])\r\n        }\r\n    }\r\n    async function getLatLong(icao) {\r\n        await API.getAirports(icao)\r\n            .then(async ({ data }) => {\r\n                const objectArray = Object.values(data[0])\r\n                airportLoc.push(parseFloat(objectArray[8], 10), parseFloat(objectArray[9], 10))\r\n            })\r\n            .catch(console.error)\r\n    }\r\n\r\n    const findDistance = async () => {\r\n        let y = -1;\r\n\r\n        for (let i = 0; i < airportLoc.length / 2; i += 2) {\r\n            y++\r\n            distance(airportLoc[i], airportLoc[i + 1], airportLoc[i + 2], airportLoc[i + 3])\r\n            if (distNum[y] > 50) {\r\n                crossCountryTrue = true\r\n\r\n            }\r\n        }\r\n    }\r\n    const distance = async (lat1, lon1, lat2, lon2) => {\r\n        var r = 3440.070\r\n        lat1 *= Math.PI / 180;\r\n        lon1 *= Math.PI / 180;\r\n        lat2 *= Math.PI / 180;\r\n        lon2 *= Math.PI / 180;\r\n        var lonDelta = lon2 - lon1;\r\n        var a = Math.pow(Math.cos(lat2) * Math.sin(lonDelta), 2) + Math.pow(Math.cos(lat1) * Math.sin(lat2) - Math.sin(lat1) * Math.cos(lat2) * Math.cos(lonDelta), 2);\r\n        var b = Math.sin(lat1) * Math.sin(lat2) + Math.cos(lat1) * Math.cos(lat2) * Math.cos(lonDelta);\r\n        var angle = Math.atan2(Math.sqrt(a), b);\r\n\r\n        distNum.push(angle * r)\r\n\r\n    }\r\n\r\n    // Calculates total time from the clock times that are input in the time boxes. If no date is entered than todays date is assumed. \r\n    const calcTime = async () => {\r\n        var departTimeDateAdd = false\r\n        var arrTimeDateAdd = false\r\n        let departTimeDate = '';\r\n        let arrTimeDate = '';\r\n        let timeCalc = 0;\r\n        const tdDate = moment.utc((logbookForm.date))\r\n        const userDate = tdDate._i\r\n\r\n        const departTime = logbookForm.depTime\r\n        const arrTime = logbookForm.arrTime\r\n        // Here we are checking if the user just input a time. If that is true then we take the date from the date box and put it in from of the time. We are using the newDate to format it as a date correctly to work with. \r\n\r\n        if (new Date(departTime) == 'Invalid Date') {\r\n            departTimeDate = moment.utc((userDate + ' ' + departTime))\r\n            departTimeDateAdd = true\r\n        } else {\r\n            departTimeDate = moment.utc(departTime)\r\n        }\r\n\r\n        if (new Date(arrTime) == 'Invalid Date') {\r\n            arrTimeDate = moment.utc(userDate + ' ' + arrTime + \":00Z\")\r\n            arrTimeDateAdd = true\r\n        } else {\r\n            arrTimeDate = moment.utc(arrTime)\r\n        }\r\n\r\n        // Subtracting the times in milliseconds. \r\n        let momentMillie = moment.duration(arrTimeDate.diff(departTimeDate))\r\n        timeCalc = convertToHoursMM(momentMillie._milliseconds)\r\n\r\n\r\n        // Auto filling times. Will add more as we have user preferences. \r\n\r\n        /*\r\n        // Filling the departure box back in so the user can see what date was used from their calculations\r\n        if (departTimeDateAdd){\r\n            (document.getElementById('deptTime').value) = (departTimeDate.getUTCMonth()+1)+'/'+departTimeDate.getUTCDate()+'/'+departTimeDate.getUTCFullYear()+' '+departTime\r\n        }\r\n        // filling the arrival time back in\r\n        if (arrTimeDateAdd){\r\n            (document.getElementById('arrTime').value) = (arrTimeDate.getUTCMonth()+1)+'/'+arrTimeDate.getUTCDate()+'/'+arrTimeDate.getUTCFullYear()+' '+arrTime\r\n        }\r\n        */\r\n        nighttimeGather(departTimeDate, arrTimeDate, timeCalc)\r\n\r\n    }\r\n\r\n    let sunTimesArr = []\r\n    async function nighttimeGather(depart, arrive, timeCalc) {\r\n        let nightTime\r\n\r\n        // Getting the departure airport suntimes dawn, sunrise, sunset, dusk pushing them into an array.\r\n        // always going to take the first airport and the last airport. Getting the last airport by finding the length of the array and taking the last two items. \r\n        // all calculations are done on sunrise and sunset times. Carrying dawn times but not using them for anything right now. \r\n        const numofAirport = airportLoc.length\r\n        console.log()\r\n        await sunTimes(depart, airportLoc[0], airportLoc[1])\r\n        await sunTimes(arrive, airportLoc[numofAirport - 2], airportLoc[numofAirport - 1])\r\n\r\n        let depRise = sunTimesArr[1]\r\n        let depSet = sunTimesArr[2]\r\n        let arrRise = sunTimesArr[5]\r\n        let arrSet = sunTimesArr[6]\r\n        console.log(\"dep \", depRise, \" depart \", depart)\r\n\r\n        if ((depart.isBefore(depRise) && arrive.isBefore(arrRise)) || (depart.isAfter(depSet) && arrive.isAfter(arrSet))) {\r\n            // this is for an all night flight before sunrise or after sunset\r\n            nightTime = timeCalc\r\n        } else if (depart.isBefore(depRise) && arrive.isAfter(arrRise)) {\r\n            // this is for an early morning departure before the sunrises\r\n\r\n            nightTime = convertToHoursMM(moment.duration(depRise.diff(depart)))\r\n        } else if (depart.isBefore(depSet) && arrive.isAfter(arrSet)) {\r\n            // evening flight departure before sunset and landing after sunset\r\n            // moment.duration(arrTimeDate.diff(departTimeDate))\r\n            nightTime = convertToHoursMM(arrive - arrSet)\r\n        } else {\r\n            nightTime = 0\r\n        }\r\n        if (nightTime > timeCalc) {\r\n            nightTime = timeCalc\r\n        }\r\n        console.log(nightTime)\r\n        setlogbookForm(logbookForm => ({\r\n            ...logbookForm,\r\n            total: timeCalc,\r\n            cxt: crossCountryTrue ? timeCalc : 0,\r\n            night: nightTime\r\n        }))\r\n\r\n    }\r\n    async function sunTimes(date, lat, long) {\r\n        await API.sunriseSunset(date, lat, long)\r\n            .then(({ data }) => {\r\n                let dawnCalc = moment.utc(data.dawn)\r\n                let sunriseCalc = moment.utc(data.sunrise)\r\n                let sunsetCalc = moment.utc(data.sunset)\r\n                let duskCalc = moment.utc(data.dusk)\r\n\r\n                sunTimesArr.push(dawnCalc, sunriseCalc, sunsetCalc, duskCalc)\r\n            })\r\n\r\n    }\r\n\r\n    function convertToHoursMM(diff) {\r\n        // Converting the time back to hours and minutes in a decimal form. \r\n        var msec = diff;\r\n        var hh = Math.floor(msec / 1000 / 60 / 60);\r\n        msec -= hh * 1000 * 60 * 60;\r\n        var mm = (msec / 1000 / 60 / 60);\r\n        msec -= mm * 1000 * 60;\r\n        var ss = Math.floor(msec / 1000);\r\n        msec -= ss * 1000;\r\n        // Limiting it to 2 decimal places. \r\n        return (hh + mm).toFixed(2)\r\n    }\r\n\r\n    const logFlight = (e) => {\r\n        const nullChecked = {}\r\n        Object.keys(logbookForm)\r\n            .forEach(key => {\r\n                nullChecked[key] = !!logbookForm[key] ? logbookForm[key] : null\r\n            })\r\n\r\n        e.preventDefault()\r\n        API.createFlight({\r\n            date: nullChecked.date,\r\n            route: nullChecked.route,\r\n            comments: logbookForm.comments,\r\n            flightNum: nullChecked.flightNum,\r\n            depTime: nullChecked.depTime,\r\n            arrTime: nullChecked.arrTime,\r\n            landings: nullChecked.landings,\r\n            iap: nullChecked.iap,\r\n            cxt: nullChecked.cxt,\r\n            holds: nullChecked.holds,\r\n            dayLdg: nullChecked.dayLdg,\r\n            nightLdg: nullChecked.nightLdg,\r\n            total: nullChecked.total,\r\n            night: nullChecked.night,\r\n            imc: nullChecked.imc,\r\n            hood: nullChecked.hood,\r\n            pic: nullChecked.pic,\r\n            sic: nullChecked.sic,\r\n            cfi: nullChecked.cfi,\r\n            dualI: nullChecked.dualI,\r\n            solo: nullChecked.solo,\r\n            UserId: user.userId,\r\n            AircraftId: nullChecked.AircraftId\r\n        })\r\n            .then((data) => {\r\n                console.log(\"logFlight data: \", data)\r\n                setlogbookFormBlank();\r\n                getFlights();\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    const editFlight = e => {\r\n        e.preventDefault();\r\n        const nullChecked = {}\r\n        Object.keys(logbookForm)\r\n            .forEach(key => {\r\n                nullChecked[key] = !!logbookForm[key] ? logbookForm[key] : null\r\n            })\r\n        API.updateFlight(modal.values.id, {\r\n            date: nullChecked.date,\r\n            route: nullChecked.route,\r\n            comments: logbookForm.comments,\r\n            flightNum: nullChecked.flightNum,\r\n            depTime: nullChecked.depTime,\r\n            arrTime: nullChecked.arrTime,\r\n            landings: nullChecked.landings,\r\n            iap: nullChecked.iap,\r\n            cxt: nullChecked.cxt,\r\n            holds: nullChecked.holds,\r\n            dayLdg: nullChecked.dayLdg,\r\n            nightLdg: nullChecked.nightLdg,\r\n            total: nullChecked.total,\r\n            night: nullChecked.night,\r\n            imc: nullChecked.imc,\r\n            hood: nullChecked.hood,\r\n            pic: nullChecked.pic,\r\n            sic: nullChecked.sic,\r\n            cfi: nullChecked.cfi,\r\n            dualI: nullChecked.dualI,\r\n            solo: nullChecked.solo,\r\n            UserId: user.userId,\r\n            AircraftId: nullChecked.AircraftId,\r\n            'Aircraft.tailNumber': nullChecked['Aircraft.tailNumber']\r\n\r\n\r\n        })\r\n            // .then(res => setlogbookFormBlank())\r\n            .catch(err => console.error(err))\r\n        setlogbookFormBlank()\r\n        getFlights();\r\n    }\r\n    const setlogbookFormBlank = () => {\r\n        setlogbookForm(prev => ({\r\n            ...prev,\r\n            date: moment().format('YYYY-MM-D'),\r\n            total: '',\r\n            crossCountry: '',\r\n            night: '',\r\n            arrTime: '',\r\n            depTime: '',\r\n            cfi: '',\r\n            comments: '',\r\n            dayLdg: '',\r\n            dualI: '',\r\n            route: '',\r\n            flightNum: '',\r\n            holds: '',\r\n            hood: '',\r\n            iap: '',\r\n            imc: '',\r\n            instructor: '',\r\n            landings: '',\r\n            nightLdg: '',\r\n            pic: '',\r\n            sic: '',\r\n            solo: '',\r\n            student: '',\r\n            tailNumber: '',\r\n            cxt: '',\r\n            aircraftId: '',\r\n            'Aircraft.tailNumber': ''\r\n\r\n        }))\r\n    }\r\n    const getTotals = () => {\r\n\r\n        API.getFlightTotals()\r\n            .then(({ data }) => {\r\n                setState(state => ({\r\n                    ...state,\r\n                    totals: data[0],\r\n                }))\r\n            })\r\n            .catch(err => console.error(err))\r\n\r\n    }\r\n\r\n    const switchFunc = arg => {\r\n        switch (arg) {\r\n            case 'addFlightBtn':\r\n                return (\r\n                    <>\r\n                        <AddFlightForm\r\n                            handleFormInput={handleFormInput}\r\n                            handleClick={workingTimeDistance}\r\n                            handleAddFlight={logFlight}\r\n                            setAircraft={setAircraft}\r\n                            value={logbookForm}\r\n                            text='Add Flight'\r\n                        />\r\n                    </>\r\n                )\r\n            case 'totalsBtn':\r\n                return (\r\n                    <TotalsDisplay\r\n                        totals={state.totals}\r\n                    />\r\n                )\r\n            case 'searchBtn':\r\n                return (\r\n                    <SearchDates\r\n                        handleFormInput={handleFormInput}\r\n                        handleClick={searchDates}\r\n                        handleReset={resetMapped}\r\n                        value = {logbookForm}\r\n                    />\r\n                )\r\n            case 'editBtn':\r\n                return (\r\n                    <>\r\n                        <AddFlightForm\r\n                            handleFormInput={handleFormInput}\r\n                            handleClick={workingTimeDistance}\r\n                            handleAddFlight={editFlight}\r\n                            setAircraft={setAircraft}\r\n                            value={logbookForm}\r\n                            text='Update Flight'\r\n                        />\r\n                    </>\r\n                )\r\n            default:\r\n                return null;\r\n        };\r\n    };\r\n\r\n    const openModal = e => {\r\n        e.preventDefault();\r\n        const { target } = e;\r\n\r\n        setModal(prevModal => ({\r\n            ...prevModal,\r\n            open: !modal.open,\r\n            values: state.fullResults.find(x => parseInt(x.id) === parseInt(target.id))\r\n        }))\r\n        // console.log(modal)\r\n        // console.log(state)\r\n    };\r\n\r\n    const openEdit = id => {\r\n\r\n        const selected = state.fullResults\r\n            .find(x => parseInt(x.id) === id)\r\n        const newLog = {}\r\n        console.log('selected', selected)\r\n\r\n        if (!selected) return;\r\n        Object.keys(logbookForm).forEach(key => { newLog[key] = selected[key] })\r\n        setlogbookForm(newLog)\r\n        getAircraftTypes()\r\n        console.log(logbookForm)\r\n        // setlogbookForm(newLog)\r\n        // console.log(\"new log\", newLog)\r\n\r\n        setModal(prevModal => ({\r\n            ...prevModal,\r\n            open: !modal.open\r\n        }))\r\n        setState({\r\n            ...state,\r\n            open: true,\r\n            btnClicked: 'editBtn'\r\n        })\r\n        window.scrollTo(0, 0)\r\n    }\r\n\r\n    const deleteBtn = id => {\r\n        // hit the delete flight route\r\n        API.deleteFlight(id)\r\n            .then(getFlights())\r\n            .catch(err => console.log(err))\r\n        // closes modal after flight is deleted\r\n        setModal(prevModal => ({\r\n            ...prevModal,\r\n            open: !modal.open\r\n        }))\r\n    }\r\n\r\n    const openAccordion = e => {\r\n        const { target } = e\r\n        setState(state => ({\r\n            ...state,\r\n            open: !state.open,\r\n            btnClicked: target.id\r\n        }))\r\n    }\r\n\r\n\r\n    return (\r\n        <UserContext.Provider value={user}>\r\n            <div>\r\n                {\r\n                    (modal.open && !!modal.values) &&\r\n\r\n                    <Modal\r\n                        key={modal.values.id}\r\n                        results={modal.values}\r\n                        openEdit={openEdit}\r\n                        deleteBtn={deleteBtn}\r\n                        handleClick={e => {\r\n                            e.preventDefault();\r\n                            setModal(state => ({\r\n                                ...state,\r\n                                open: !modal.open\r\n                            }))\r\n                        }}\r\n                    />\r\n\r\n                }\r\n                <Nav />\r\n\r\n                <div className='menuDiv'>\r\n                    {/* here will be the buttons for this page. Maybe i'll make a component for these since there will be one on each page. */}\r\n                    <Button\r\n                        text='Add Flight'\r\n                        btnId='addFlightBtn'\r\n                        btnClass='menuBtn'\r\n                        handleClick={openAccordion}\r\n                    />\r\n                    <Button\r\n                        text='Search'\r\n                        btnId='searchBtn'\r\n                        btnClass='menuBtn'\r\n                        handleClick={openAccordion}\r\n                    />\r\n                    <Button\r\n                        text='Totals'\r\n                        btnId='totalsBtn'\r\n                        btnClass='menuBtn'\r\n                        handleClick={(e) => {\r\n                            openAccordion(e)\r\n                            getTotals();\r\n                        }}\r\n                    />\r\n                    {/* <Button\r\n                    text='Training'\r\n                    btnId='training'\r\n                    btnClass='menuBtn'\r\n                    handleClick={(e) => {\r\n                        const { target } = e;\r\n                        e.preventDefault()\r\n                        console.log(\"add flight\")\r\n                        setState(state => ({\r\n                            ...state,\r\n                            open: !state.open,\r\n                            btnClicked: target.id\r\n                        }))\r\n                        console.log(state.btnClicked)\r\n                    }}\r\n                /> */}\r\n                    <Button\r\n                        text='Logout'\r\n                        btnId='logout'\r\n                        btnClass='menuBtn'\r\n                        handleClick={(e) => {\r\n                            e.preventDefault()\r\n                            console.log(\"logout\")\r\n                            console.log(state.btnClicked)\r\n                            API.userLogOut()\r\n                                .then(window.location.href = \"/\")\r\n                                .catch(err => console.error(err))\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className='formDiv'>\r\n                    {\r\n                        !state.open\r\n                            ? null\r\n                            : (\r\n                                switchFunc(state.btnClicked)\r\n                            )\r\n                    }\r\n                </div>\r\n                <main>\r\n                    {\r\n                        <Table\r\n                            openModal={openModal} flights={state.mapped}\r\n                        />\r\n                    }\r\n\r\n                    {/* Modal for popping out table. maybe a 'view' button opens and closes it */}\r\n                    {/* The table will live here. Might try to do an actual table first, then will try grid or flexbox. */}\r\n                </main>\r\n\r\n            </div>\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Logbook;","import React, { useState, useEffect } from 'react';\r\nimport Input from '../components/Input';\r\nimport Nav from '../components/Nav/index';\r\nimport API from '../utils/API'\r\n\r\n\r\n\r\nconst Training = () => {\r\n\r\n    const [studentEmail, setStudentEmail] = useState(\"\");\r\n    const [invalidSubmission, setInvalidSubmission] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (studentEmail && invalidSubmission) setInvalidSubmission(false);\r\n    }, [studentEmail])\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (!studentEmail) {\r\n\r\n            return setInvalidSubmission(true); // render an error message\r\n        }\r\n        try {\r\n\r\n            // Find if the entered email address is already in the system\r\n            API.userVerify({\r\n                studentEmail: studentEmail\r\n            })\r\n                .then(function (matchingStudent) {\r\n                    // If the email address entered corresponds to another created user account\r\n                    if (matchingStudent.data[0]) {\r\n\r\n                        // Find current logged in user\r\n                        API.userData({\r\n                        })\r\n                            .then(function (loggedInUser) {\r\n                                // Find if the logged in user already has access to the entered student account\r\n                                API.checkDuplicates({\r\n                                    instructorID: loggedInUser.data.id,\r\n                                    studentID: matchingStudent.data[0].id\r\n                                })\r\n                                    .then(function (DuplicateAccess) {\r\n                                        // If a duplicate is not found\r\n                                        if (!DuplicateAccess.data[0]) {\r\n                                            // Send an authentication email to the email address typed in\r\n                                            API.sendMail({\r\n                                                \"email\": matchingStudent.data[0].email,\r\n                                                \"ID\": matchingStudent.data[0].id,\r\n                                                \"user\": loggedInUser\r\n                                            })\r\n                                        }\r\n                                        else {\r\n                                            console.log(\"You already have access to this student\")\r\n                                        }\r\n\r\n                                    })\r\n\r\n                            })\r\n                            .catch(error => (console.log(error)))\r\n\r\n                    }\r\n                    else {\r\n                        console.log(\"This student needs to create an account first\")\r\n                    }\r\n                })\r\n\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Nav />\r\n            <main>\r\n                <form onSubmit={onSubmit}>\r\n                    <Input\r\n                        type=\"text\"\r\n                        id=\"student-email-input\"\r\n                        placeholder=\"Student Email\"\r\n                        label=\"Student Email\"\r\n                        handleInputChange={({ target: { value } }) => setStudentEmail(value)}\r\n                    />\r\n                    <button id='add-student' type=\"submit\" >\r\n                        Add Student\r\n                </button>\r\n                </form>\r\n                {invalidSubmission && (<div>Please enter a valid email</div>)}\r\n            </main>\r\n        </>\r\n    );\r\n\r\n\r\n};\r\n\r\n\r\nexport default Training;","import React from 'react'\r\nimport './style.css'\r\n\r\nconst AircraftDisplay = ({ aircraft }) => {\r\n\r\n    return (\r\n        <div className='tableBody'>\r\n            {\r\n                !!aircraft.length &&\r\n                aircraft.map((x, i) =>\r\n                    <div key={i + '-row'} id={x.id} className='tableRow'>\r\n                        <div className='aircraft' id={x.id}>{x.tailNumber} {x.description}</div>\r\n                    </div>)\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default AircraftDisplay","import React from 'react';\r\nimport Input from '../Input/index';\r\nimport Button from '../Button/index';\r\nimport './style.css'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst AddAircraft = ({ addT, setAircraft, value, handleFormInput }) => {\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <h4 className='header'>Aircraft Information</h4>\r\n                <div className='inputDiv'>\r\n                    <Input\r\n                        labelFor='tailNumber'\r\n                        label='tailNumber'\r\n                        name='tailNumber'\r\n                        type='tailNumber'\r\n                        inputId='tailNumber'\r\n                        inputClass='addFlightInput'\r\n                        placeholder='Tail Number'\r\n                        handleInputChange={handleFormInput}\r\n                        // value={value.tailNumber}\r\n                    />\r\n                    <Select\r\n                        options={value.allModels}\r\n                        labelFor='aircraftType'\r\n                        label='Aircraft Type'\r\n                        name='aircraftType'\r\n                        inputId='aircraftTypeInput'\r\n                        inputClass='addFlightInput dropdown'\r\n                        onChange={setAircraft}\r\n                    />\r\n                </div>\r\n                <div className='btnWrapper'>\r\n                    <Button\r\n                        text='Add Airplane'\r\n                        btnId='createAircraftBtn'\r\n                        className='formBtn'\r\n                        handleClick={addT}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddAircraft;","import React, { useState, useEffect } from 'react';\r\nimport Nav from '../components/Nav/index';\r\nimport API from '../utils/API';\r\nimport AircraftDisplay from '../components/AircraftDisplay/'\r\nimport Button from '../components/Button/index'\r\nimport AddAircraft from '../components/AddAircraftForm'\r\nimport UserContext from '../utils/UserContext';\r\nimport getAircraftTypesFunction from '../components/AircraftDisplay/function'\r\n\r\n\r\nconst Aircraft = () => {\r\n    const [state, setState] = useState({\r\n        open: false,\r\n        btnClicked: '',\r\n        userCurrentAircraft: [],\r\n        tailNumber: '',\r\n        modelId:0\r\n    });\r\n    const [user, setUser] = useState({\r\n        userId: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        getCurrentTypes()\r\n        getAllTypes()\r\n\r\n    }, [])\r\n\r\n    const getAllTypes = () => {\r\n        API.getAircraftModels()\r\n            .then(({ data }) => {\r\n                const formattedResults = data.map(x => ({\r\n                    value: x.id,\r\n                    label: x.manufacture_code + ' ' + x.description + ' ' + x.category_class\r\n                }))\r\n\r\n                setState(state => ({\r\n                    ...state,\r\n                    allModels: formattedResults\r\n                }))\r\n            })\r\n\r\n\r\n    }\r\n    const getCurrentTypes = () => {\r\n        API.getAircraftTypes()\r\n            .then(({ data }) => {\r\n                let rawResults = []\r\n                let filteredResults = []\r\n                let uniqueId = []\r\n                for (let i = 0; i < data.length; i++) {\r\n                    if (!uniqueId.includes(data[i].AircraftId)) {\r\n                        if (data[i]['Aircraft.tailNumber'] != null) {\r\n                            rawResults.push(data[i])\r\n                            uniqueId.push(data[i].AircraftId)\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                filteredResults = rawResults.map((a) => ({\r\n                    id: a.AircraftId,\r\n                    modelId: a['Aircraft.AircraftModel.id'],\r\n                    tailNumber: a['Aircraft.tailNumber'],\r\n                    description: a['Aircraft.AircraftModel.description'],\r\n                    category_class: a['Aircraft.AircraftModel.category_class'],\r\n                    // tailWheel:a['Aircraft.AircraftModel.tailWheel'],\r\n                    // highPerf:a['Aircraft.AircraftModel.highPerf'],\r\n                    // complex:a['Aircraft.AircraftModel.complex'],\r\n                    // taa:a['Aircraft.AircraftModel.taa'],\r\n                    // simulator:a['Aircraft.AircraftModel.simulator'],\r\n                    // designator: a['Aircraft.AircraftModel.tdesig'],\r\n\r\n\r\n                }))\r\n                let filteredResultsSorted = filteredResults.sort((a, b) => (a.tailNumber > b.tailNumber) ? 1 : ((b.tailNumber > a.tailNumber) ? -1 : 0))\r\n\r\n                setState(state => ({\r\n                    ...state,\r\n                    userCurrentAircraft: filteredResultsSorted\r\n                }))\r\n            })\r\n            .catch(console.error)\r\n    }\r\n    const handleFormInput = ({ target: { value, name } }) => {\r\n        setState(state => ({\r\n            ...state,\r\n            // date: new Date(),\r\n            [name]: value\r\n        }))\r\n        \r\n    };\r\n\r\n    const addTail = (event) => {\r\n        event.preventDefault()\r\n        API.createAircraft({\r\n            tailNumber: state.tailNumber,\r\n            AircraftModelId: state.modelId\r\n        })\r\n        .then((data) => {\r\n            console.log(state)\r\n            console.log(data)})\r\n        \r\n        .catch(console.error)\r\n    }\r\n\r\n    const setAircraft = (value) => {\r\n        setState(state =>({\r\n            ...state,\r\n            modelId: value.value\r\n        }))\r\n        \r\n    }\r\n\r\n    const switchFunc = arg => {\r\n        switch (arg) {\r\n            case 'Addaircraft':\r\n                return (\r\n                    <>\r\n                        <AddAircraft\r\n                            handleFormInput={handleFormInput}\r\n                            addT={addTail}\r\n                            value={state}\r\n                            setAircraft={setAircraft}\r\n                        />\r\n                    </>\r\n                )\r\n                break;\r\n            case 'modelBtn':\r\n                // console.log('totals', state.totals)\r\n                // getTotals()\r\n                // return (\r\n                // <TotalsDisplay\r\n                //     totals={state.totals}\r\n                // />\r\n                // )\r\n                break;\r\n            default:\r\n                return null;\r\n                break;\r\n        };\r\n    };\r\n\r\n    // const openModal = e => {\r\n    //     e.preventDefault();\r\n    //     const { target } = e;\r\n\r\n    //     setModal(prevModal => ({\r\n    //         ...prevModal,\r\n    //         open: !modal.open,\r\n    //         values: state.fullResults.find(x => parseInt(x.id) === parseInt(target.id))\r\n    //     }))\r\n    //     console.log(modal)\r\n    //     console.log(state)\r\n    // };\r\n\r\n    // const openEdit = id => {\r\n    //     console.log('open edit id', id)\r\n\r\n    //     const selected = state.fullResults\r\n    //         .find(x => parseInt(x.id) === id)\r\n    //     const newLog = {}\r\n\r\n    //     if (!selected) return;\r\n    //     Object.keys(logbookForm).forEach(key => { newLog[key] = selected[key] })\r\n    //     setlogbookForm(newLog)\r\n    //     setModal(prevModal => ({\r\n    //         ...prevModal,\r\n    //         open: !modal.open\r\n    //     }))\r\n    //     setState({\r\n    //         ...state,\r\n    //         open: true,\r\n    //         btnClicked: 'addFlightBtn'\r\n    //     })\r\n    // }\r\n\r\n    // const deleteBtn = id => {\r\n    //     // hit the delete flight route\r\n    //     API.deleteFlight(id)\r\n    //         .then(getFlights())\r\n    //         .catch(err => console.log(err))\r\n    //     // closes modal after flight is deleted\r\n    //     setModal(prevModal => ({\r\n    //         ...prevModal,\r\n    //         open: !modal.open\r\n    //     }))\r\n    // }\r\n    const openAccordion = e => {\r\n        const { target } = e\r\n        setState(state => ({\r\n            ...state,\r\n            open: !state.open,\r\n            btnClicked: target.id\r\n        }))\r\n    }\r\n    return (\r\n        <UserContext.Provider value={user}>\r\n            <Nav />\r\n            <div className='menuDiv'>\r\n                {/* here will be the buttons for this page. Maybe i'll make a component for these since there will be one on each page. */}\r\n                <Button\r\n                    text='Add Aircraft'\r\n                    btnId='Addaircraft'\r\n                    btnClass='menuBtn'\r\n                    handleClick={openAccordion}\r\n                />\r\n            </div>\r\n            <div className='formDiv'>\r\n                {\r\n                    !state.open\r\n                        ? null\r\n                        : (\r\n                            switchFunc(state.btnClicked)\r\n                        )\r\n                }\r\n            </div>\r\n            <AircraftDisplay aircraft={state.userCurrentAircraft} />\r\n\r\n        </UserContext.Provider>\r\n    );\r\n\r\n\r\n};\r\n\r\n\r\nexport default Aircraft;","import React from 'react';\r\nimport Input from '../Input/index';\r\nimport Button from '../Button/index';\r\nimport './style.css'\r\n\r\n\r\n\r\nconst ViewAirport = ({ handleClick, handleFormInput }) => {\r\n\r\n    return (\r\n        <div>\r\n            \r\n                <div className='inputDiv'>\r\n                    <Input\r\n                        labelFor='airport'\r\n                        label='airport'\r\n                        name='airport'\r\n                        type='airport'\r\n                        inputId='airport'\r\n                        inputClass='addFlightInput'\r\n                        placeholder='Enter ICAO Identifier'\r\n                        handleInputChange={handleFormInput}\r\n                        onChange={handleFormInput}\r\n                        // value={value.tailNumber}\r\n                    />\r\n                    <Button\r\n                        text='Find Airport'\r\n                        btnId='viewAirport'\r\n                        className='formBtn'\r\n                        handleClick={handleClick}\r\n                    />\r\n                </div>\r\n                \r\n                \r\n                \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewAirport;\r\n\r\n","\r\nimport React from 'react'\r\nimport GoogleMapReact from 'google-map-react'\r\n\r\n\r\nimport './map.css'\r\n\r\nconst getMapOptions = (maps) => {\r\n\r\n  return {\r\n      scaleControl: true,\r\n      gestureHandling: \"greedy\",\r\n      disableDoubleClickZoom: true,\r\n      minZoom: 11,\r\n      maxZoom: 17,\r\n\r\n      mapTypeControl: true,\r\n      mapTypeId: maps.MapTypeId.SATELLITE,\r\n      mapTypeControlOptions: {\r\n          style: maps.MapTypeControlStyle.HORIZONTAL_BAR,\r\n          position: maps.ControlPosition.BOTTOM_CENTER,\r\n          mapTypeIds: [\r\n              maps.MapTypeId.ROADMAP,\r\n              maps.MapTypeId.SATELLITE,\r\n              maps.MapTypeId.HYBRID\r\n          ]\r\n      },\r\n      zoomControl: true,\r\n  };\r\n}\r\n\r\n\r\nconst Map = ({ location, zoomLevel }) => (\r\n  \r\n  <div >\r\n    \r\n\r\n    <div style={{ height: '50vh', width: '100%' }}>\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{\r\n          key: process.env.key}}\r\n        \r\n        center={location}\r\n        zoom={zoomLevel}\r\n        options={getMapOptions}\r\n      >\r\n      </GoogleMapReact>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Map","import React, { useState, useEffect } from 'react';\r\nimport Nav from '../components/Nav/index';\r\nimport ViewAirport from '../components/ViewAirport'\r\nimport API from '../utils/API';\r\nimport Button from '../components/Button/index'\r\nimport UserContext from '../utils/UserContext';\r\nimport MapSection from '../components/map/Map' \r\nimport '../components/ViewAirport/style.css'\r\n\r\nconst Airports = () => {\r\n    const [state, setState] = useState({\r\n        open: 0,\r\n        btnClicked: '',\r\n        userCurrentAircraft: [],\r\n        airport: '',\r\n        modelId: 0,\r\n        google:'',\r\n        \r\n    });\r\n    const [user, setUser] = useState({\r\n        userId: ''\r\n    })\r\n\r\n    const handleFormInput = ({ target: { value, name } }) => {\r\n        setState(state => ({\r\n            ...state,\r\n            // date: new Date(),\r\n            airport: value\r\n        }))\r\n        // apiCall()  \r\n\r\n    };\r\n    const apiCall = () => {\r\n        API.getAirports({\r\n            airport: state.airport\r\n        })\r\n            .then(({ data }) => {\r\n                const formattedResults = data.map(a => ({\r\n                    icao: a.icao,\r\n                    name: a.name,\r\n                    iata: a.iata,\r\n                    city: a.city,\r\n                    state: a.state,\r\n                    country: a.country,\r\n                    lat: a.lat,\r\n                    long: a.lon,\r\n                    elevation: a.elevation\r\n\r\n                }))\r\n                console.log(formattedResults)\r\n                setState(state => ({\r\n                    ...state,\r\n                    airportInfo: formattedResults,\r\n                    open: true\r\n                }))\r\n            })\r\n            .catch(console.error)\r\n    }\r\n    \r\n    const printState = (data) => {\r\n        if (data.length === 0) {\r\n            return (\r\n                <div className=\"airport\">\r\n                    <h1>No Airport Found. Try again. </h1>\r\n                </div>\r\n            )\r\n        } else {\r\n            const location =[]\r\n            location.push(parseFloat(data[0].lat,10),\r\n            parseFloat(data[0].long,10))              \r\n              \r\n            return (\r\n                <>\r\n                <div className=\"airport\">\r\n                    <h1>{data[0].name}</h1>\r\n                    <h2>{data[0].city + ' ' + data[0].state + ' ' + data[0].country}</h2>\r\n                    <h2>Elevation: {data[0].elevation}</h2>\r\n                </div>\r\n                <div>\r\n                <MapSection \r\n                    location={location} \r\n                    zoomLevel={13} \r\n                    \r\n                    />\r\n                    \r\n                </div>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n    const printNoAirport = () => {\r\n        return (\r\n            <div className=\"airport\">\r\n                <h1>Search for an airport by ICAO code</h1>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={user}>\r\n            <Nav />\r\n            <div className='menuDiv'>\r\n                <ViewAirport\r\n                    handleFormInput={handleFormInput}\r\n                    handleClick={apiCall}\r\n                    value={state}\r\n\r\n                />\r\n            </div>\r\n            <div className='formDiv'>\r\n                {!state.open ? printNoAirport() : (printState(state.airportInfo))}\r\n            </div>\r\n\r\n\r\n        </UserContext.Provider>\r\n    );\r\n\r\n\r\n};\r\n\r\n\r\nexport default Airports;","import React from 'react';\r\nimport Nav from '../components/Nav/index';\r\n\r\n\r\nconst MyProfile = () => {\r\n\r\n    \r\n    return (\r\n        <>\r\n            <Nav/>\r\n            <div>\r\n                <h1>My Profile Coming Soon</h1>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    \r\n};\r\n\r\n\r\nexport default MyProfile;","import React from 'react';\r\nimport { Redirect, BrowserRouter, Route, Link } from 'react-router';\r\nimport API from '../utils/API'\r\n\r\n\r\n const Validate  = (props) => {\r\n    // console.log(props.match.params.key)\r\n    API.userAccess({\r\n        key: props.match.params.key,\r\n        ID: props.match.params.studentID\r\n    })\r\n        console.log(\"validate.js line 26-key\", props.match.params.key)\r\n        console.log(\"validate.js line 27-ID\", props.match.params.studentID)\r\n        return(\r\n            <h1>Your connection to this user has been verified! You can now close this tab.</h1>\r\n            // <Redirect to=\"/logbook\" />\r\n        );\r\n}\r\n\r\nexport default Validate","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Signup from './pages/Signup';\r\nimport Logbook from './pages/Logbook';\r\nimport Training from './pages/Training';\r\nimport Aircraft from './pages/Aircraft';\r\nimport Airports from './pages/Airports';\r\nimport MyProfile from './pages/MyProfile';\r\nimport Redirect from './pages/Validate';\r\nimport './style.css'\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path='/' component={Signup} />\r\n        <Route exact path='/logbook' component={Logbook} />\r\n        <Route exact path='/training' component={Training} />\r\n        <Route exact path='/Aircraft' component={Aircraft} />\r\n        <Route exact path='/Airports' component={Airports} />\r\n        <Route exact path='/myProfile' component={MyProfile} />\r\n        <Route exact path='/redirect/:key/:studentID' component={Redirect} />\r\n      </Switch>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if ((process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) || 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logoSmall.80f51e00.png\";"],"sourceRoot":""}