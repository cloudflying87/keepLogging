{"version":3,"sources":["logoSmall.png","components/Button/index.js","components/Input/index.js","utils/API.js","pages/Signup.js","components/Nav/index.js","components/AddFlightForm/index.js","components/Table/index.js","components/Modal/index.js","components/Chart/index.js","components/TotalsDisplay/index.js","utils/UserContext.js","pages/Logbook.js","pages/Training.js","components/AircraftDisplay/index.js","components/AddAircraftForm/index.js","pages/Aircraft.js","components/ViewAirport/index.js","components/map/Map.jsx","pages/Airports.js","pages/MyProfile.js","pages/Validate.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","text","handleClick","btnId","btnClass","onClick","id","className","Input","label","labelFor","name","type","inputId","inputClass","placeholder","handleInputChange","value","size","htmlFor","onChange","tail","axios","post","get","icao","airport","date","lat","long","_i","flightData","put","delete","userData","email","key","studentEmail","message","user","Signup","props","useState","password","state","setState","useEffect","target","e","preventDefault","API","then","res","history","push","catch","err","error","data","Nav","children","open","width","window","innerWidth","setWidth","addEventListener","_","removeEventListener","src","logo","alt","burger","document","querySelector","classList","toggle","to","AddFlightForm","handleFormInput","handleAddFlight","setAircraft","aircraftList","setOpen","customStyles","option","provided","color","isSelected","control","height","singleValue","opacity","isDisabled","transition","CSSTransition","in","timeout","classNames","onEnter","options","styles","route","rows","cols","comments","flightNum","depTime","arrTime","iap","holds","landings","dayLdg","nightLdg","total","cxt","night","imc","hood","pic","sic","cfi","dualI","solo","Table","openModal","flights","showTable","setShowTable","unmountOnExit","length","Object","keys","filter","x","map","i","Date","Aircraft","Route","Comments","Total","Modal","openEdit","deleteBtn","results","instructor","student","Chart","totals","filteredTotals","pieTotals","PIC","SIC","CFI","barData","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","values","pieData","maintainAspectRatio","TotalsDisplay","UserContext","createContext","userId","airportLoc","distNum","crossCountryTrue","Logbook","btnClicked","fullResults","mapped","moment","format","crossCountry","logbookForm","setlogbookForm","modal","setModal","setUser","getFlights","console","getAircraftTypes","log","location","href","AircraftId","rawResults","uniqueId","includes","filteredResultsSorted","a","sort","b","workingTimeDistance","undefined","alert","workingTimes","findDistance","calcTime","eachAirport","split","getLatLong","objectArray","parseFloat","y","distance","lat1","lon1","lat2","lon2","Math","PI","lonDelta","pow","cos","sin","angle","atan2","sqrt","departTimeDate","arrTimeDate","tdDate","utc","userDate","departTime","momentMillie","duration","diff","timeCalc","convertToHoursMM","_milliseconds","nighttimeGather","sunTimesArr","depart","arrive","numofAirport","sunTimes","depRise","depSet","arrRise","arrSet","nightTime","isBefore","isAfter","dawnCalc","dawn","sunriseCalc","sunrise","sunsetCalc","sunset","duskCalc","dusk","msec","hh","floor","mm","toFixed","logFlight","nullChecked","forEach","UserId","setlogbookFormBlank","editFlight","prev","tailNumber","aircraftId","openAccordion","Provider","selected","find","parseInt","newLog","prevModal","scrollTo","arg","switchFunc","Training","setStudentEmail","invalidSubmission","setInvalidSubmission","onSubmit","event","randomstring","generate","matchingStudent","loggedInUser","AircraftDisplay","aircraft","description","AddAircraft","addT","allModels","userCurrentAircraft","modelId","getCurrentTypes","getAllTypes","formattedResults","manufacture_code","category_class","addTail","AircraftModelId","ViewAirport","getMapOptions","maps","scaleControl","gestureHandling","disableDoubleClickZoom","minZoom","maxZoom","mapTypeControl","mapTypeId","MapTypeId","SATELLITE","mapTypeControlOptions","style","MapTypeControlStyle","HORIZONTAL_BAR","position","ControlPosition","BOTTOM_CENTER","mapTypeIds","ROADMAP","HYBRID","zoomControl","Map","zoomLevel","bootstrapURLKeys","center","zoom","Airports","google","iata","city","country","lon","elevation","airportInfo","printState","MyProfile","Validate","match","params","App","exact","path","component","Redirect","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","process","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.44d40499.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoSmall.80f51e00.png\";","import React from 'react';\nimport './style.css'\n\nconst Button = ({ text, handleClick, btnId, btnClass }) => {\n\n\n\n    return (\n        <button\n        onClick={handleClick}\n        id={btnId}\n        className={btnClass}\n        >\n            {text}\n        </button>\n    )\n}\n\nexport default Button;","import React from 'react';\nimport './style.css';\n\nconst Input = ({ label, labelFor, name, type, inputId, inputClass, placeholder, handleInputChange, value, size }) => {\n    return (\n        <>\n            <label\n                htmlFor={labelFor}\n            >\n                {label}\n            </label>\n            <input\n                name={name}\n                type={type}\n                id={inputId}\n                className={inputClass}\n                placeholder={placeholder}\n                onChange={handleInputChange}\n                value={value}\n                size={size}\n            />\n        </>\n    )\n\n};\n\nexport default Input;","import axios from 'axios';\n\nexport default {\n    // aircraft routes -----------------------------------------------------\n    //get all aircraft\n    getAircraft: function () {\n        return axios.get('api/aircraft/');\n    },\n    // selecting one aircraft\n    getOneAircraft: function (id) {\n        return axios.get('/api/aircraft/' + id);\n    },\n    // create an aiarcraft\n    createAircraft: function (tail) {\n        return axios.post('/api/aircraft/' , tail);\n    },\n    // update an aircraft\n    updateAircraft: function (id) {\n        return axios.put('/api/aircraft/update/' + id);\n    },\n    // delete an aircraft\n    deleteAircraft: function (id) {\n        return axios.delete('/api/aircraft/delte/' + id);\n    },\n    // translate aircraft type into id\n    getAircraftId: function (aircraftType) {\n        return axios.get('/api/aircraft/userFind/' + aircraftType);\n    },\n    // putting aircraft types in a list for our dropdown menu\n    getAircraftTypes: function () {\n        return axios.get('api/aircraftTypes/');\n    },\n    getAircraftModels: function () {\n        return axios.get('api/aircraftModels/');\n    },\n    // airport routes --------------------------------------------------------\n    // all airports\n\n    getAirports: function (icao) {\n        return axios.get('/api/airport/' + icao.airport);\n    },\n    // get airport by id\n    getOneAirport: function (id) {\n        return axios.get('/api/airports/' + id);\n    },\n    // create an airport\n    createAirport: function () {\n        return axios.post('/api/airport');\n    },\n    // update airport\n    updateAirport: function (id) {\n        return axios.put('/api/airports/' + id);\n    },\n\n    sunriseSunset: function (date, lat, long) {\n        return axios.get('/api/nighttime?date=' + date._i + '&lat=' + lat + '&long=' + long);\n    },\n    deleteAirport: function (id) {\n        return axios.delete('/api/airports/delete/' + id);\n    },\n    // flight_time routes ----------------------------------------------------------------\n    // get all flight_times for the user\n    getFlights: function () {\n        return axios.get('/api/flight_time/');\n    },\n    // select one flight_time\n    getOneFlight: function (userId, id) {\n        return axios.get(`/api/flight_time/${userId}/${id}`);\n    },\n    // create a flight_time\n\n    createFlight: function (flightData) {\n        return axios.post('/api/flight_time', (flightData));\n    },\n    // update a flight_time\n    updateFlight: function (id, flightData) {\n        return axios.put('/api/flight_time/update/' + id, flightData);\n    },\n    // delete a flight_time\n    deleteFlight: function (id) {\n        return axios.delete(`/api/flight_time/delete/${id}`);\n    },\n    // get flight_time totals\n    getFlightTotals: function () {\n        return axios.get('/api/flight_times/totals/');\n    },\n\n    // -------------------------------------------------------------------------------\n    // user login routes\n    //login user\n    userLogin: function (userData) {\n        return axios.post('/api/login', userData);\n    },\n    // sign up a user\n    userSignUp: function (userData) {\n        return axios.post('/api/signup', userData);\n    },\n    // log out a user\n    userLogOut: function () {\n        return axios.get('/logout');\n    },\n    // getting user data to be used client side\n    userData: function () {\n        return axios.get('/api/user_data');\n    },\n    userVerify: function (email) {\n        return axios.post('/api/verifyAccount', email);\n    },\n    userAccess: function (key, studentEmail) {\n        return axios.post('/api/addAccess', key, studentEmail);\n    },\n    sendMail: function (message, user) {\n        return axios.post('/api/sendMail', message, user);\n    },\n    redirect: function (validationKey, studentEmail) {\n        return axios.get(`/redirect/${validationKey}/${studentEmail}`);\n    }\n}\n\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport Button from '../components/Button/index';\nimport Input from '../components/Input/index';\nimport API from '../utils/API';\nimport './signup.css'\n\nconst Signup = props => {\n\n    const [state, setState] = useState({\n        email: '',\n        password: ''\n    });\n\n    useEffect(() => {\n    }, [])\n\n\n    const handleSignup = e => {\n        e.preventDefault();\n        \n        API.userSignUp({\n            email: state.email, \n            password: state.password\n        })\n        .then(res => {\n            props.history.push('/logbook')})\n        .catch(err => {\n            setState(state=>({\n                ...state,\n                error: err\n            }))\n        })\n    };\n\n    const handleLogin = e => {\n        e.preventDefault();\n        \n        API.userLogin({\n            email: state.email, \n            password: state.password\n        })\n        .then(({data}) =>{\n            props.history.push('/logbook');\n        })\n        .catch(err => {\n            setState(state=>({\n                ...state,\n                error: err\n            }))\n        })\n    };\n\n    // takes form data and updates state with appropriate values\n    const handleInputChange = ({ target: { value, name } }) => {\n        setState(state => ({\n            ...state,\n            [name]: value\n        }))\n    };\n\n\n    return (\n        <main className='signupWrapper'>\n            <form className='signupForm'>\n                <div className='formDiv1'>\n                    <Input\n                        label='email'\n                        labelFor='email'\n                        type='text'\n                        inputId='email'\n                        placeholder='email'\n                        handleInputChange={handleInputChange}\n                        name='email'\n                        className='inputBox'\n                        />\n                    <Input\n                        label='password'\n                        labelFor='password'\n                        type='password'\n                        inputId='password'\n                        placeholder='Password'\n                        handleInputChange={handleInputChange}\n                        name='password'\n                        className='inputBox'\n                    />\n                </div>\n                <div className='formDiv2'>\n                    <Button\n                        text=\"Sign up\"\n                        btnId='signUp'\n                        btnClass='authBtn'\n                        handleClick={handleSignup}\n                    />\n                    <Button\n                        text=\"Log in\"\n                        btnId='logIn'\n                        btnClass='authBtn'\n                        handleClick={handleLogin}\n                    />\n                </div>\n\n            </form>\n            {\n                state.error && <h1>{state.error.message}</h1>\n            }\n        </main>\n    );\n};\n\nexport default Signup;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './style.css';\nimport logo from '../../logoSmall.png';\nimport Button from '../Button/index';\nimport API from '../../utils/API';\n\nconst Nav = ({ children }) => {\n\n    const [state, setState] = useState({\n        open: false,\n        width: window.innerWidth\n    });\n\n    useEffect(() => {\n        // set width function\n        function setWidth() {\n            setState(state => ({\n                ...state,\n                width: window.innerWidth\n            }))\n        }\n        // sets width when window is resized\n        window.addEventListener('resize', setWidth);\n\n        // clean up dependencies\n        return _ => {\n            window.removeEventListener('resize', setWidth);\n        }\n        // keep sate.width and state.open updated\n    }, [state.width, state.open])\n\n    // on click for hamburger menu\n    const toggleNav = () => {\n        setState(state => ({\n            ...state,\n            open: !state.open\n        }))\n        const burger = document.querySelector('i');\n        const navList = document.querySelector('ul');\n        // show nav list\n        navList.classList.toggle('navActive')\n        // toggle between hamburger menu bars and X\n        burger.classList.toggle('fa-times');\n        burger.classList.toggle('fa-bars');\n    }\n\n\n    // if (children.location.pathname === '/') \n    //     return false;\n\n    return (\n        <nav>\n            <div className='logoDiv'>\n                <img src={logo} alt='keep_logging logo' />\n                <div className='burger'>\n                    <i\n                        className=\"fas fa-bars\"\n                        onClick={toggleNav}\n                    />\n                </div>\n            </div>\n            <ul className=\"navList\">\n                <li>\n                    <Link\n                        to='/logbook'\n                    >\n                        Logbook\n                     </Link>\n                </li>\n                <li>\n                    <Link\n                        to='/aircraft'\n                    >\n                        Aircraft\n                     </Link>\n                </li>\n                <li>\n                    <Link\n                        to='/airports'\n                    >\n                        Airports\n                     </Link>\n                </li>\n                <li>\n                    <Link\n                        to='/training'\n                    >\n                        Training\n                     </Link>\n                </li>\n                <li>\n                    <Link\n                        to='/myProfile'>\n                        My Profile\n                     </Link>\n                </li>\n                <li>\n                    <Link\n                        onClick={()=> API.userLogOut()}\n                        to='/'>\n                        Logout\n                     </Link>\n                </li>\n                {/* <li>\n                    \n                    <Button\n                        text='Logout'\n                        btnId='logout'\n                        btnClass='menuBtn'\n                        handleClick={(e) => {\n                            API.userLogOut()\n                                .then(window.location.href = \"/\")\n                                .catch(err => console.error(err))\n                        }}\n                    />\n                </li> */}\n            </ul>\n        </nav>\n    )\n}\n\nexport default Nav;\n","import React, { useState, useEffect } from 'react';\nimport Input from '../Input/index';\nimport Button from '../Button/index';\nimport './style.css'\nimport Select from 'react-select'\nimport { CSSTransition } from 'react-transition-group'\n\nconst AddFlightForm = ({ handleFormInput, handleAddFlight, handleClick, value, setAircraft, text, aircraftList }) => {\n    const [open, setOpen] = useState(false)\n    useEffect(() => {\n        setOpen(true)\n    }, [])\n    const customStyles = {\n        option: (provided, state) => ({\n            ...provided,\n            color: state.isSelected && 'blue',\n        }),\n        control: (provided, state) => ({\n            ...provided,\n            width: 'auto',\n            height: '15px',\n            color: 'purple'\n        }),\n        singleValue: (provided, state) => {\n            const opacity = state.isDisabled ? 0.5 : 1;\n            const transition = 'opacity 1300ms';\n\n            return { ...provided, opacity, transition };\n        }\n    }\n    return (\n        <>\n            <CSSTransition\n                in={open}\n                timeout={1000}\n                classNames=\"form\"\n                // unmountOnExit\n                onEnter={() => setOpen(true)}\n                // onExited={() => setOpen(true)}\n            >\n                <form>\n                    <h4 className='header'>General Flight Info</h4>\n                    <div className='inputDiv threeboxes'>\n                        <Input\n                            labelFor='date'\n                            label='Date'\n                            name='date'\n                            type='date'\n                            inputId='dateInput'\n                            inputClass='addFlightInput'\n                            placeholder='date'\n                            handleInputChange={handleFormInput}\n                            // value={logbookForm.date}\n                            value={value.date}\n                        />\n                        {/* <Input\n                        labelFor='aircraftType'\n                        label='Aircraft Type'\n                        name='aircraftType'\n                        type='list'\n                        inputId='aircraftTypeInput'\n                        inputClass='addFlightInput'\n                        placeholder='Aircraft Type'\n                        handleInputChange={handleFormInput}\n                        value={value.aircraftType}\n                    /> */}\n                        {/* <DropdownList\n                        data={value.aircraftType}\n                        valueField='id'\n                        textField='name'\n                        defaultValue={1}\n                    /> */}\n                        <Select\n                            options={value.aircraftList}\n                            labelFor='aircraftType'\n                            label='Aircraft Type'\n                            name='aircraftType'\n                            inputId='aircraftTypeInput'\n                            inputClass='addFlightInput dropdown'\n                            placeholder={!!value['Aircraft.tailNumber'] ? value['Aircraft.tailNumber'] : 'Aircraft Type'}\n                            width='200px'\n                            // defaultValue = {value.aircraftList[1]}\n                            styles={customStyles}\n                            onChange={setAircraft}\n                        />\n                        <Input\n                            labelFor='route'\n                            label='Route'\n                            name='route'\n                            type='text'\n                            inputId='routeInput'\n                            inputClass='addFlightInput'\n                            placeholder='Route'\n                            handleInputChange={handleFormInput}\n                            value={value.route}\n                        />\n                    </div>\n                    <div className='commentsDiv'>\n                        <textarea\n                            label='Comments'\n                            name='comments'\n                            type='text-area'\n                            id='commentsInput'\n                            className='addFlightInput'\n                            placeholder='comments'\n                            onChange={handleFormInput}\n                            rows={4}\n                            cols={40}\n                            value={value.comments}\n                        />\n                    </div>\n                    <div className='inputDiv gfi3'>\n                        <Input\n                            labelFor='flightNum'\n                            label='Flight Number'\n                            name='flightNum'\n                            type='text'\n                            inputId='flightNumberInput'\n                            inputClass='addFlightInput'\n                            placeholder='Flight Num'\n                            handleInputChange={handleFormInput}\n                            size={6}\n                            value={value.flightNum}\n                        />\n                        <Input\n                            labelFor='depTime'\n                            label='Dep Time'\n                            name='depTime'\n                            type='text'\n                            inputId='departureTimeInput'\n                            inputClass='addFlightInput'\n                            placeholder='Dep Time'\n                            handleInputChange={handleFormInput}\n                            size={6}\n                            value={value.depTime}\n                        />\n                        <Input\n                            labelFor='arrTime'\n                            label='Arr Time'\n                            name='arrTime'\n                            type='text'\n                            inputId='arrivalTimeInput'\n                            inputClass='addFlightInput'\n                            placeholder='Arr Time'\n                            handleInputChange={handleFormInput}\n                            size={6}\n                            value={value.arrTime}\n\n                        />\n                        <Button\n                            text='Auto Fill'\n                            btnId='autoFill'\n                            className='formBtn'\n                            handleClick={handleClick}\n                        />\n                    </div>\n                    <h4 className='header'>Approaches and Landings</h4>\n                    <div className='appLandDiv'>\n                        <Input\n                            labelFor='iap'\n                            label='Approach'\n                            name='iap'\n                            type='text'\n                            inputId='approachInput'\n                            inputClass='addFlightInput'\n                            placeholder='Approach'\n                            handleInputChange={handleFormInput}\n                            size={4}\n                            value={value.iap}\n                        />\n                        <Input\n                            labelFor='holds'\n                            label='hold'\n                            name='holds'\n                            type='text'\n                            inputId='holdInput'\n                            inputClass='addFlightInput'\n                            placeholder='Hold'\n                            handleInputChange={handleFormInput}\n                            size={2}\n                            value={value.holds}\n\n                        />\n                        <Input\n                            labelFor='landings'\n                            label='landings'\n                            name='landings'\n                            type='text'\n                            inputId='landingsInput'\n                            inputClass='addFlightInput'\n                            placeholder='Landings'\n                            handleInputChange={handleFormInput}\n                            size={4}\n                            value={value.landings}\n\n                        />\n                        <Input\n                            labelFor='dayLdg'\n                            label='dayLandings'\n                            name='dayLdg'\n                            type='text'\n                            inputId='dayLandingsInput'\n                            inputClass='addFlightInput'\n                            placeholder='Day Landings'\n                            handleInputChange={handleFormInput}\n                            size={4}\n                            value={value.dayLdg}\n\n                        />\n                        <Input\n                            labelFor='nightLdg'\n                            label='nightLandings'\n                            name='nightLdg'\n                            type='text'\n                            inputId='nightLandingsInput'\n                            inputClass='addFlightInput'\n                            placeholder='Night Landings'\n                            handleInputChange={handleFormInput}\n                            size={4}\n                            value={value.nightLdg}\n\n                        />\n                    </div>\n                    <h4 className='header'>Times</h4>\n                    <div>\n                        <div className='timesDivRow1'>\n                            <Input\n                                labelFor='total'\n                                label='total'\n                                name='total'\n                                type='text'\n                                inputId='totalInput'\n                                inputClass='addFlightInput'\n                                placeholder='Total'\n                                handleInputChange={handleFormInput}\n                                size={3}\n                                value={value.total}\n                            />\n                            <Input\n                                labelFor='cxt'\n                                label='crossCountry'\n                                name='cxt'\n                                type='text'\n                                inputId='crossCountryInput'\n                                inputClass='addFlightInput'\n                                placeholder='xCountry'\n                                handleInputChange={handleFormInput}\n                                size={3}\n                                value={value.cxt}\n                            />\n                            <Input\n                                labelFor='night'\n                                label='night'\n                                name='night'\n                                type='text'\n                                inputId='nightInput'\n                                inputClass='addFlightInput'\n                                placeholder='Night'\n                                handleInputChange={handleFormInput}\n                                size={3}\n                                value={value.night}\n                            />\n                            <Input\n                                labelFor='imc'\n                                label='imc'\n                                name='imc'\n                                type='text'\n                                inputId='imcInput'\n                                inputClass='addFlightInput'\n                                placeholder='IMC'\n                                handleInputChange={handleFormInput}\n                                size={3}\n                                value={value.imc}\n\n                            />\n                            <Input\n                                labelFor='hood'\n                                label='hood'\n                                name='hood'\n                                type='text'\n                                inputId='hoodInput'\n                                inputClass='addFlightInput'\n                                placeholder='Hood'\n                                handleInputChange={handleFormInput}\n                                size={3}\n                                value={value.hood}\n\n                            />\n                        </div>\n                        <div className='timesDivRow2'>\n                            <Input\n                                labelFor='pic'\n                                label='pic'\n                                name='pic'\n                                type='text'\n                                inputId='picInput'\n                                inputClass='addFlightInput'\n                                placeholder='PIC'\n                                handleInputChange={handleFormInput}\n                                size={3}\n                                value={value.pic}\n\n                            />\n                            <Input\n                                labelFor='sic'\n                                label='sic'\n                                name='sic'\n                                type='text'\n                                inputId='sicInput'\n                                inputClass='addFlightInput'\n                                placeholder='SIC'\n                                handleInputChange={handleFormInput}\n                                size={3}\n                                value={value.sic}\n\n                            />\n                            <Input\n                                labelFor='cfi'\n                                label='cfi'\n                                name='cfi'\n                                type='text'\n                                inputId='cfiInput'\n                                inputClass='addFlightInput'\n                                placeholder='CFI'\n                                handleInputChange={handleFormInput}\n                                size={3}\n                                value={value.cfi}\n\n                            />\n                            <Input\n                                labelFor='dualI'\n                                label='dual'\n                                name='dualI'\n                                type='text'\n                                inputId='dualInput'\n                                inputClass='addFlightInput'\n                                placeholder='Dual'\n                                handleInputChange={handleFormInput}\n                                size={3}\n                                value={value.dualI}\n\n                            />\n                            <Input\n                                labelFor='solo'\n                                label='solo'\n                                name='solo'\n                                type='text'\n                                inputId='soloInput'\n                                inputClass='addFlightInput'\n                                placeholder='Solo'\n                                handleInputChange={handleFormInput}\n                                size={3}\n                                value={value.solo}\n\n                            />\n                        </div>\n\n                    </div>\n                    <div className='btnWrapper'>\n                        <Button\n                            text={text}\n                            btnId='createFlightBtn'\n                            className='formBtn'\n                            handleClick={handleAddFlight}\n                        />\n                    </div>\n                </form>\n            </CSSTransition>\n        </>\n    )\n}\n\nexport default AddFlightForm;","import React, { useState, useEffect } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport './style.css'\n\nconst Table = ({ openModal, flights }) => {\n\n    const [showTable, setShowTable] = useState()\n\n    useEffect(() => {\n        setShowTable(true)\n    }, [])\n    return (\n        <>\n            <CSSTransition\n                in={showTable}\n                timeout={2000}\n                className='enter'\n                unmountOnExit\n            >\n                <div className='table'>\n                    <div className='tableHeader'>\n                        {\n                            !!flights.length &&\n                            Object.keys(flights[0]).filter(x => x !== 'id').map((x, i) => <h5 key={i} className={'col' + i} name={x}>{x}</h5>)\n                        }\n                    </div>\n                    <div className='tableBody'>\n                        {\n                            !!flights.length &&\n                            flights.map((x, i) => <div key={i + '-row'} id={x.id} className='tableCol' onClick={openModal}>\n                                <div className='dateCol' id={x.id}>{x.Date}</div>\n                                <div className='aircraftCol' id={x.id}>{x.Aircraft}</div>\n                                <div className='routeCol' id={x.id}>{x.Route}</div>\n                                <div className='commentsCol' id={x.id}>{x.Comments}</div>\n                                <div className='totalCol' id={x.id}>{x.Total}</div>\n                            </div>)\n                        }\n                    </div>\n                </div>\n            </CSSTransition>\n        </>\n    )\n}\n\nexport default Table;","import React from 'react';\nimport Button from '../Button/index';\nimport './style.css'\n\nconst Modal = ({ handleClick, openEdit, deleteBtn, results }) => {\n    \n    return (\n        <div className='modal'>\n            <div className='modalContent'>\n                <Button\n                    btnClass='modalBtn'\n                    btnId='closeModal'\n                    text='X'\n                    handleClick={handleClick}\n                />\n\n                <ul className='modalUl'>\n\n                    <li className='modalLi'><strong>Date:</strong> {results.date}</li>\n\n                    {!!results['Aircraft.tailNumber'] &&\n                        <li className='modalLi'><strong>Aircraft:</strong> {results['Aircraft.tailNumber']}</li>}\n\n                    {!!results.route && <li className='modalLi'><strong>Route:</strong> {results.route}</li>}\n\n                    {!!results.flightNum && <li className='modalLi'><strong>Flight Number</strong> {results.flightNum}</li>}\n\n                    {!!results.landings && <li className='modalLi'><strong>Landings:</strong> {results.landings}</li>}\n\n                    {!!results.imc && <li className='modalLi'><strong>IMC:</strong> {results.imc}</li>}\n\n                    {!!results.hood && <li className='modalLi'><strong>Hood:</strong> {results.hood}</li>}\n\n                    {!!results.iap && <li className='modalLi'><strong>IAP:</strong> {results.iap}</li>}\n\n                    {!!results.holds && <li className='modalLi'><strong>Holds:</strong> {results.holds}</li>}\n\n                    {!!results.pic && <li className='modalLi'><strong>PIC:</strong> {results.pic}</li>}\n\n                    {!!results.sic && <li className='modalLi'><strong>SIC:</strong> {results.sic}</li>}\n\n                    {!!results.cfi && <li className='modalLi'><strong>CFI:</strong> {results.cfi}</li>}\n\n                    {!!results.dualI && <li className='modalLi'><strong>Dual:</strong> {results.cfi}</li>}\n\n                    {!!results.cxt && <li className='modalLi'><strong>Cross Country:</strong> {results.cxt}</li>}\n\n                    {!!results.solo && <li className='modalLi'><strong>Solo:</strong> {results.solo}</li>}\n\n                    {!!results.total && <li className='modalLi'><strong>Total:</strong> {results.total}</li>}\n\n                    {!!results.dayLdg && <li className='modalLi'><strong>Day Landings:</strong> {results.dayLdg}</li>}\n\n                    {!!results.night && <li className='modalLi'><strong>Night:</strong> {results.night}</li>}\n\n                    {!!results.nightLdg && <li className='modalLi'><strong>Night Landings:</strong> {results.nightLdg}</li>}\n\n                    {!!results.instructor && <li className='modalLi'><strong>Instructor:</strong> {results.instructor}</li>}\n\n                    {!!results.student && <li className='modalLi'><strong>Student:</strong> {results.student}</li>}\n\n\n                </ul>\n                <Button\n\n                    text='Edit'\n                    btnId='editBtn'\n                    className='editAndDeleteBtns'\n                    handleClick={() => openEdit(results.id)}\n                />\n                <Button\n                    text='Delete'\n                    btnId='deleteBtn'\n                    className='editAndDeleteBtns'\n                    handleClick={()=> deleteBtn(results.id)}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Modal;","import React from 'react'\nimport { Bar, Pie } from 'react-chartjs-2';\n\nconst Chart = ({ totals }) => {\n\n    const filteredTotals = {\n        'xCountry': totals.cxt,\n        pic: totals.pic,\n        sic: totals.sic,\n        cfi: totals.cfi,\n        dualI: totals.dualI,\n        solo: totals.solo,\n        total: totals.total,\n        night: totals.night\n    }\n\n    const pieTotals = {\n        PIC: totals.pic,\n        SIC: totals.sic,\n        CFI: totals.cfi,\n        'Dual I': totals.dualI\n    }\n\n    const barData = {\n        labels: Object.keys(filteredTotals),\n        datasets: [\n            {\n                label: 'Hours',\n                backgroundColor: 'rgba(255,255,255,.8)',\n                borderColor: 'rgba(0,26,200,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n                hoverBorderColor: 'rgba(255,99,132,1)',\n                data: Object.values(filteredTotals)\n            }\n        ]\n    };\n\n    const pieData = {\n        labels: Object.keys(pieTotals),\n        datasets: [{\n            data: Object.values(pieTotals),\n            backgroundColor: [\n            '#FF6384',\n            '#36A2EB',\n            '#FFCE56'\n            ],\n            hoverBackgroundColor: [\n            '#FF6384',\n            '#36A2EB',\n            '#FFCE56'\n            ]\n        }]\n    };\n    \n\n    return (\n        <div>\n            <h2>Totals</h2>\n            <Bar\n                data={barData}\n                options={{\n                    maintainAspectRatio: true\n                }}\n            />\n            <h2>Pilot Times</h2>\n            <Pie data={pieData} />\n        </div>\n    );\n};\n\nexport default Chart;","import React from 'react';\nimport Chart from '../Chart/index';\nimport './style.css'\n\nconst TotalsDisplay = ({totals}) => {\n\n    return (\n        <div className='totalsList'>\n            <Chart totals={totals} />\n            {\n                <ul >\n                    {!!totals.cxt &&\n                        <li><strong>Cross Country</strong> {totals.cxt}</li>}\n                    {!!totals.night &&\n                        <li><strong>Night</strong> {totals.night}</li>}\n                    {!!totals.imc &&\n                        <li><strong>IMC</strong> {totals.imc}</li>}\n                    {!!totals.hood &&\n                        <li><strong>Simulated Instrument</strong> {totals.hood}</li>}\n                    {!!totals.iap &&\n                        <li><strong>Instrument Approaches</strong> {totals.iap}</li>}\n                    {!!totals.holds &&\n                        <li><strong>Holds</strong> {totals.holds}</li>}\n                    {!!totals.dayLdg &&\n                        <li><strong>Day Landings</strong> {totals.dayLdg}</li>}\n                    {!!totals.nightLdg &&\n                        <li><strong>Night Landings</strong> {totals.nightLdg}</li>}\n                    {!!totals.solo &&\n                        <li><strong>Solo</strong> {totals.solo}</li>}\n                    {!!totals.dualI &&\n                        <li><strong>Instruction Received</strong> {totals.dualI}</li>}\n                    {!!totals.pic &&\n                        <li><strong>PIC</strong> {totals.pic}</li>}\n                    {!!totals.sic &&\n                        <li><strong>SIC</strong> {totals.sic}</li>}\n                    {!!totals.cfi &&\n                        <li><strong>CFI</strong> {totals.cfi}</li>}\n                    {!!totals.total &&\n                        <li><strong>Total</strong> {totals.total}</li>}\n                </ul>\n            }\n        </div>\n    )\n}\n\nexport default TotalsDisplay;","import React, { createContext } from 'react';\n\nconst UserContext = createContext({\n    userId: ''\n});\n\nexport default UserContext;","import React, { useState, useEffect } from 'react';\nimport Button from '../components/Button/index';\nimport Nav from '../components/Nav/index';\nimport AddFlightForm from '../components/AddFlightForm/index';\nimport Table from '../components/Table/index';\nimport Modal from '../components/Modal/index';\nimport TotalsDisplay from '../components/TotalsDisplay/index';\nimport API from '../utils/API';\nimport UserContext from '../utils/UserContext';\nimport moment from 'moment'\nimport { CSSTransition } from 'react-transition-group';\nimport './logbook.css'\nimport getAircraftTypesFunction from '../components/AircraftDisplay/function';\n\nlet airportLoc = [];\nlet distNum = [];\nlet crossCountryTrue = false;\nconst Logbook = () => {\n\n    const [state, setState] = useState({\n        open: false,\n        btnClicked: '',\n        fullResults: [],\n        mapped: [],\n        totals: [],\n        // userId: ''\n    })\n    const [logbookForm, setlogbookForm] = useState({\n        date: moment().format('YYYY-MM-D'),\n        total: '',\n        crossCountry: '',\n        night: '',\n        arrTime: '',\n        depTime: '',\n        cfi: '',\n        comments: '',\n        dayLdg: '',\n        dualI: '',\n        route: '',\n        flightNum: '',\n        holds: '',\n        hood: '',\n        iap: '',\n        imc: '',\n        instructor: '',\n        landings: '',\n        nightLdg: '',\n        pic: '',\n        sic: '',\n        solo: '',\n        student: '',\n        total: '',\n        cxt: '',\n        aircraftId: '',\n        aircraftType: '',\n        aircraftList: [],\n        'Aircraft.tailNumber': ''\n\n    })\n    // const [aircraftList, setAircraftList] = useState()\n    const [modal, setModal] = useState({\n        open: false,\n        values: []\n    });\n    const [user, setUser] = useState({\n        userId: ''\n    })\n\n    useEffect(() => {\n        getFlights();\n        API.userData()\n            .then(res => {\n                setUser(({\n                    userId: res.data.id\n                }))\n            })\n            .catch(err => {\n                console.error(err)\n            })\n        getAircraftTypes()\n    }, [])\n\n    const getFlights = () => {\n        API.getFlights()\n            .then((res) => {\n                const mapped = res.data.map(x => ({\n                    Date: x.date,\n                    Aircraft: x['Aircraft.tailNumber'],\n                    Route: x.route,\n                    Comments: x.comments,\n                    Total: x.total,\n                    id: x.id\n                }))\n                setState(state => ({\n                    ...state,\n                    fullResults: res.data,\n                    mapped\n                }))\n            })\n            .catch(err => {\n                console.log(err)\n                window.location.href = '/'\n            });\n    }\n    const setAircraft = (value) => {\n        setlogbookForm(logbookForm => ({\n            ...logbookForm,\n            AircraftId: value.value\n        }))\n    }\n    \n    const handleFormInput = ({ target: { value, name } }) => {\n        setlogbookForm(logbookForm => ({\n            ...logbookForm,\n            // date: new Date(),\n            [name]: value\n        }))\n    };\n    const getAircraftTypes = () => {\n        API.getAircraftTypes()\n            .then(({ data }) => {\n                let rawResults = []\n                let filteredResults = []\n                let uniqueId = []\n                for (let i = 0; i < data.length; i++) {\n                    if (!uniqueId.includes(data[i].AircraftId)) {\n                        if (data[i]['Aircraft.tailNumber'] != null) {\n                            rawResults.push(data[i])\n                            uniqueId.push(data[i].AircraftId)\n                        }\n                    }\n                }\n                // console.log()\n                filteredResults = rawResults.map((a) => ({\n                    value: a.AircraftId,\n                    label: a['Aircraft.tailNumber'] + ' ' + a['Aircraft.AircraftModel.description'],\n\n                }))\n                let filteredResultsSorted = filteredResults.sort((a, b) => (a.label > b.label) ? 1 : ((b.label > a.label) ? -1 : 0))\n\n                setlogbookForm(logbookForm => ({\n                    ...logbookForm,\n                    aircraftList: filteredResultsSorted\n                }))\n                // setAircraftList(filteredResultsSorted)\n            })\n    }\n    const workingTimeDistance = async (e) => {\n        e.preventDefault();\n        if (logbookForm.route === undefined ||\n            logbookForm.depTime === undefined ||\n            logbookForm.arrTime === undefined) {\n            return alert('Need to fill in Route, Departure Time and Arrival Time')\n        }\n        await workingTimes();\n        await findDistance();\n        await calcTime();\n    }\n\n    const workingTimes = async () => {\n        const eachAirport = logbookForm.route.split(' ')\n        for (let i = 0; i < eachAirport.length; i++) {\n            await getLatLong(eachAirport[i])\n        }\n    }\n    async function getLatLong(icao) {\n        await API.getAirports(icao)\n            .then(async ({ data }) => {\n                const objectArray = Object.values(data[0])\n                airportLoc.push(parseFloat(objectArray[8], 10), parseFloat(objectArray[9], 10))\n            })\n            .catch(console.error)\n    }\n\n    const findDistance = async () => {\n        let y = -1;\n\n        for (let i = 0; i < airportLoc.length / 2; i += 2) {\n            y++\n            distance(airportLoc[i], airportLoc[i + 1], airportLoc[i + 2], airportLoc[i + 3])\n            if (distNum[y] > 50) {\n                crossCountryTrue = true\n\n            }\n        }\n    }\n    const distance = async (lat1, lon1, lat2, lon2) => {\n        var r = 3440.070\n        lat1 *= Math.PI / 180;\n        lon1 *= Math.PI / 180;\n        lat2 *= Math.PI / 180;\n        lon2 *= Math.PI / 180;\n        var lonDelta = lon2 - lon1;\n        var a = Math.pow(Math.cos(lat2) * Math.sin(lonDelta), 2) + Math.pow(Math.cos(lat1) * Math.sin(lat2) - Math.sin(lat1) * Math.cos(lat2) * Math.cos(lonDelta), 2);\n        var b = Math.sin(lat1) * Math.sin(lat2) + Math.cos(lat1) * Math.cos(lat2) * Math.cos(lonDelta);\n        var angle = Math.atan2(Math.sqrt(a), b);\n\n        distNum.push(angle * r)\n\n    }\n\n    // Calculates total time from the clock times that are input in the time boxes. If no date is entered than todays date is assumed. \n    const calcTime = async () => {\n        var departTimeDateAdd = false\n        var arrTimeDateAdd = false\n        let departTimeDate = '';\n        let arrTimeDate = '';\n        let timeCalc = 0;\n        const tdDate = moment.utc((logbookForm.date))\n        const userDate = tdDate._i\n\n        const departTime = logbookForm.depTime\n        const arrTime = logbookForm.arrTime\n        // Here we are checking if the user just input a time. If that is true then we take the date from the date box and put it in from of the time. We are using the newDate to format it as a date correctly to work with. \n\n        if (new Date(departTime) == 'Invalid Date') {\n            departTimeDate = moment.utc((userDate + ' ' + departTime))\n            departTimeDateAdd = true\n        } else {\n            departTimeDate = moment.utc(departTime)\n        }\n\n        if (new Date(arrTime) == 'Invalid Date') {\n            arrTimeDate = moment.utc(userDate + ' ' + arrTime + \":00Z\")\n            arrTimeDateAdd = true\n        } else {\n            arrTimeDate = moment.utc(arrTime)\n        }\n\n        // Subtracting the times in milliseconds. \n        let momentMillie = moment.duration(arrTimeDate.diff(departTimeDate))\n        timeCalc = convertToHoursMM(momentMillie._milliseconds)\n\n\n        // Auto filling times. Will add more as we have user preferences. \n\n        /*\n        // Filling the departure box back in so the user can see what date was used from their calculations\n        if (departTimeDateAdd){\n            (document.getElementById('deptTime').value) = (departTimeDate.getUTCMonth()+1)+'/'+departTimeDate.getUTCDate()+'/'+departTimeDate.getUTCFullYear()+' '+departTime\n        }\n        // filling the arrival time back in\n        if (arrTimeDateAdd){\n            (document.getElementById('arrTime').value) = (arrTimeDate.getUTCMonth()+1)+'/'+arrTimeDate.getUTCDate()+'/'+arrTimeDate.getUTCFullYear()+' '+arrTime\n        }\n        */\n        nighttimeGather(departTimeDate, arrTimeDate, timeCalc)\n\n    }\n\n    let sunTimesArr = []\n    async function nighttimeGather(depart, arrive, timeCalc) {\n        let nightTime\n\n        // Getting the departure airport suntimes dawn, sunrise, sunset, dusk pushing them into an array.\n        // always going to take the first airport and the last airport. Getting the last airport by finding the length of the array and taking the last two items. \n        // all calculations are done on sunrise and sunset times. Carrying dawn times but not using them for anything right now. \n        const numofAirport = airportLoc.length\n        console.log()\n        await sunTimes(depart, airportLoc[0], airportLoc[1])\n        await sunTimes(arrive, airportLoc[numofAirport - 2], airportLoc[numofAirport - 1])\n\n        let depRise = sunTimesArr[1]\n        let depSet = sunTimesArr[2]\n        let arrRise = sunTimesArr[5]\n        let arrSet = sunTimesArr[6]\n        console.log(\"dep \", depRise, \" depart \", depart)\n\n        if ((depart.isBefore(depRise) && arrive.isBefore(arrRise)) || (depart.isAfter(depSet) && arrive.isAfter(arrSet))) {\n            // this is for an all night flight before sunrise or after sunset\n            nightTime = timeCalc\n        } else if (depart.isBefore(depRise) && arrive.isAfter(arrRise)) {\n            // this is for an early morning departure before the sunrises\n\n            nightTime = convertToHoursMM(moment.duration(depRise.diff(depart)))\n        } else if (depart.isBefore(depSet) && arrive.isAfter(arrSet)) {\n            // evening flight departure before sunset and landing after sunset\n            // moment.duration(arrTimeDate.diff(departTimeDate))\n            nightTime = convertToHoursMM(arrive - arrSet)\n        } else {\n            nightTime = 0\n        }\n        if (nightTime > timeCalc) {\n            nightTime = timeCalc\n        }\n        console.log(nightTime)\n        setlogbookForm(logbookForm => ({\n            ...logbookForm,\n            total: timeCalc,\n            cxt: crossCountryTrue ? timeCalc : 0,\n            night: nightTime\n        }))\n\n    }\n    async function sunTimes(date, lat, long) {\n        await API.sunriseSunset(date, lat, long)\n            .then(({ data }) => {\n                let dawnCalc = moment.utc(data.dawn)\n                let sunriseCalc = moment.utc(data.sunrise)\n                let sunsetCalc = moment.utc(data.sunset)\n                let duskCalc = moment.utc(data.dusk)\n\n                sunTimesArr.push(dawnCalc, sunriseCalc, sunsetCalc, duskCalc)\n            })\n\n    }\n\n    function convertToHoursMM(diff) {\n        // Converting the time back to hours and minutes in a decimal form. \n        var msec = diff;\n        var hh = Math.floor(msec / 1000 / 60 / 60);\n        msec -= hh * 1000 * 60 * 60;\n        var mm = (msec / 1000 / 60 / 60);\n        msec -= mm * 1000 * 60;\n        var ss = Math.floor(msec / 1000);\n        msec -= ss * 1000;\n        // Limiting it to 2 decimal places. \n        return (hh + mm).toFixed(2)\n    }\n\n    const logFlight = (e) => {\n        const nullChecked = {}\n        Object.keys(logbookForm)\n            .forEach(key => {\n                nullChecked[key] = !!logbookForm[key] ? logbookForm[key] : null\n            })\n\n        e.preventDefault()\n        API.createFlight({\n            date: nullChecked.date,\n            route: nullChecked.route,\n            comments: logbookForm.comments,\n            flightNum: nullChecked.flightNum,\n            depTime: nullChecked.depTime,\n            arrTime: nullChecked.arrTime,\n            landings: nullChecked.landings,\n            iap: nullChecked.iap,\n            cxt: nullChecked.cxt,\n            holds: nullChecked.holds,\n            dayLdg: nullChecked.dayLdg,\n            nightLdg: nullChecked.nightLdg,\n            total: nullChecked.total,\n            night: nullChecked.night,\n            imc: nullChecked.imc,\n            hood: nullChecked.hood,\n            pic: nullChecked.pic,\n            sic: nullChecked.sic,\n            cfi: nullChecked.cfi,\n            dualI: nullChecked.dualI,\n            solo: nullChecked.solo,\n            UserId: user.userId,\n            AircraftId: nullChecked.AircraftId\n        })\n            .then((data) => {\n                console.log(\"logFlight data: \", data)\n                setlogbookFormBlank();\n                getFlights();\n            })\n            .catch(err => console.log(err))\n\n    }\n\n    const editFlight = e => {\n        e.preventDefault();\n        const nullChecked = {}\n        Object.keys(logbookForm)\n            .forEach(key => {\n                nullChecked[key] = !!logbookForm[key] ? logbookForm[key] : null\n            })\n        API.updateFlight(modal.values.id, {\n            date: nullChecked.date,\n            route: nullChecked.route,\n            comments: logbookForm.comments,\n            flightNum: nullChecked.flightNum,\n            depTime: nullChecked.depTime,\n            arrTime: nullChecked.arrTime,\n            landings: nullChecked.landings,\n            iap: nullChecked.iap,\n            cxt: nullChecked.cxt,\n            holds: nullChecked.holds,\n            dayLdg: nullChecked.dayLdg,\n            nightLdg: nullChecked.nightLdg,\n            total: nullChecked.total,\n            night: nullChecked.night,\n            imc: nullChecked.imc,\n            hood: nullChecked.hood,\n            pic: nullChecked.pic,\n            sic: nullChecked.sic,\n            cfi: nullChecked.cfi,\n            dualI: nullChecked.dualI,\n            solo: nullChecked.solo,\n            UserId: user.userId,\n            AircraftId: nullChecked.AircraftId,\n            'Aircraft.tailNumber': nullChecked['Aircraft.tailNumber']\n\n\n        })\n            // .then(res => setlogbookFormBlank())\n            .catch(err => console.error(err))\n        setlogbookFormBlank()\n        getFlights();\n    }\n    const setlogbookFormBlank = () => {\n        setlogbookForm(prev => ({\n            ...prev,\n            date: moment().format('YYYY-MM-D'),\n            total: '',\n            crossCountry: '',\n            night: '',\n            arrTime: '',\n            depTime: '',\n            cfi: '',\n            comments: '',\n            dayLdg: '',\n            dualI: '',\n            route: '',\n            flightNum: '',\n            holds: '',\n            hood: '',\n            iap: '',\n            imc: '',\n            instructor: '',\n            landings: '',\n            nightLdg: '',\n            pic: '',\n            sic: '',\n            solo: '',\n            student: '',\n            tailNumber: '',\n            cxt: '',\n            aircraftId: '',\n            'Aircraft.tailNumber': ''\n\n        }))\n    }\n    const getTotals = () => {\n\n        API.getFlightTotals()\n            .then(({ data }) => {\n                setState(state => ({\n                    ...state,\n                    totals: data[0],\n                }))\n            })\n            .catch(err => console.error(err))\n\n    }\n\n    const switchFunc = arg => {\n        switch (arg) {\n            case 'addFlightBtn':\n                return (\n                    <>\n                        <AddFlightForm\n                            handleFormInput={handleFormInput}\n                            handleClick={workingTimeDistance}\n                            handleAddFlight={logFlight}\n                            setAircraft={setAircraft}\n                            value={logbookForm}\n                            text='Add Flight'\n                        />\n                    </>\n                )\n            case 'totalsBtn':\n                return (\n                    <TotalsDisplay\n                        totals={state.totals}\n                    />\n                )\n            case 'editBtn':\n                return (\n                    <>\n                        <AddFlightForm\n                            handleFormInput={handleFormInput}\n                            handleClick={workingTimeDistance}\n                            handleAddFlight={editFlight}\n                            setAircraft={setAircraft}\n                            value={logbookForm}\n                            text='Update Flight'\n                        />\n                    </>\n                )\n            default:\n                return null;\n        };\n    };\n\n    const openModal = e => {\n        e.preventDefault();\n        const { target } = e;\n\n        setModal(prevModal => ({\n            ...prevModal,\n            open: !modal.open,\n            values: state.fullResults.find(x => parseInt(x.id) === parseInt(target.id))\n        }))\n        // console.log(modal)\n        // console.log(state)\n    };\n\n    const openEdit = id => {\n\n        const selected = state.fullResults\n            .find(x => parseInt(x.id) === id)\n        const newLog = {}\n        console.log('selected', selected)\n\n        if (!selected) return;\n        Object.keys(logbookForm).forEach(key => { newLog[key] = selected[key] })\n        setlogbookForm(newLog)\n        getAircraftTypes()\n        console.log(logbookForm)\n        // setlogbookForm(newLog)\n        // console.log(\"new log\", newLog)\n\n        setModal(prevModal => ({\n            ...prevModal,\n            open: !modal.open\n        }))\n        setState({\n            ...state,\n            open: true,\n            btnClicked: 'editBtn'\n        })\n        window.scrollTo(0, 0)\n    }\n\n    const deleteBtn = id => {\n        // hit the delete flight route\n        API.deleteFlight(id)\n            .then(getFlights())\n            .catch(err => console.log(err))\n        // closes modal after flight is deleted\n        setModal(prevModal => ({\n            ...prevModal,\n            open: !modal.open\n        }))\n    }\n\n    const openAccordion = e => {\n        const { target } = e\n        setState(state => ({\n            ...state,\n            open: !state.open,\n            btnClicked: target.id\n        }))\n    }\n\n\n    return (\n        <UserContext.Provider value={user}>\n            <div>\n                {\n                    (modal.open && !!modal.values) &&\n\n                    <Modal\n                        key={modal.values.id}\n                        results={modal.values}\n                        openEdit={openEdit}\n                        deleteBtn={deleteBtn}\n                        handleClick={e => {\n                            e.preventDefault();\n                            setModal(state => ({\n                                ...state,\n                                open: !modal.open\n                            }))\n                        }}\n                    />\n\n                }\n                <Nav />\n\n                <div className='menuDiv'>\n                    {/* here will be the buttons for this page. Maybe i'll make a component for these since there will be one on each page. */}\n                    <Button\n                        text='Add Flight'\n                        btnId='addFlightBtn'\n                        btnClass='menuBtn'\n                        handleClick={openAccordion}\n                    />\n                    <Button\n                        text='Search'\n                        btnId='searchBtn'\n                        btnClass='menuBtn'\n                        handleClick={openAccordion}\n                    />\n                    <Button\n                        text='Totals'\n                        btnId='totalsBtn'\n                        btnClass='menuBtn'\n                        handleClick={(e) => {\n                            openAccordion(e)\n                            getTotals();\n                        }}\n                    />\n                    {/* <Button\n                    text='Training'\n                    btnId='training'\n                    btnClass='menuBtn'\n                    handleClick={(e) => {\n                        const { target } = e;\n                        e.preventDefault()\n                        console.log(\"add flight\")\n                        setState(state => ({\n                            ...state,\n                            open: !state.open,\n                            btnClicked: target.id\n                        }))\n                        console.log(state.btnClicked)\n                    }}\n                /> */}\n                    <Button\n                        text='Logout'\n                        btnId='logout'\n                        btnClass='menuBtn'\n                        handleClick={(e) => {\n                            e.preventDefault()\n                            console.log(\"logout\")\n                            console.log(state.btnClicked)\n                            API.userLogOut()\n                                .then(window.location.href = \"/\")\n                                .catch(err => console.error(err))\n                        }}\n                    />\n                </div>\n                    <div className='formDiv'>\n                        {\n                            !state.open\n                                ? null\n                                : (\n                                    switchFunc(state.btnClicked)\n                                )\n                        }\n                    </div>\n                <main>\n                    {\n                        <Table\n                            openModal={openModal} flights={state.mapped}\n                        />\n                    }\n\n                    {/* Modal for popping out table. maybe a 'view' button opens and closes it */}\n                    {/* The table will live here. Might try to do an actual table first, then will try grid or flexbox. */}\n                </main>\n\n            </div>\n        </UserContext.Provider>\n    )\n}\n\nexport default Logbook;","import React, { useState, useEffect } from 'react';\nimport Input from '../components/Input';\nimport Nav from '../components/Nav/index';\nimport API from '../utils/API'\n// import SMTP from '../utils/SMTP'\nimport randomstring from 'randomstring'\n// const sendmail = require('sendmail')();\n\n\n\nconst Training = () => {\n\n    const [studentEmail, setStudentEmail] = useState(\"\");\n    const [invalidSubmission, setInvalidSubmission] = useState(false);\n\n    useEffect(() => {\n        if (studentEmail && invalidSubmission) setInvalidSubmission(false);\n    }, [studentEmail])\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        console.log(studentEmail)\n        if (!studentEmail) {\n\n            return setInvalidSubmission(true); // render an error message\n        }\n        try {\n            var random = randomstring.generate()\n\n            // Find if the entered email address is already in the system\n            API.userVerify({\n                studentEmail: studentEmail\n            })\n                .then(function (matchingStudent) {\n                    console.log(\"Matching user\", matchingStudent)\n\n                    // Find current logged in user\n                    API.userData({\n                    })\n                        .then(function (loggedInUser) {\n                            console.log(\"Logged in user\", loggedInUser)\n\n                            API.sendMail({\n                                \"email\": studentEmail,\n                                \"user\": loggedInUser\n                            })\n\n\n\n                            // API.userAccess({\n                            // })\n                            //     .then(function (random, loggedInUser) {\n                            //         console.log(\"Logged in user\", loggedInUser)\n                            //         console.log(\"random\", random)\n                            //     })\n                        })\n                        .catch(error => (console.log(error)))\n\n                })\n\n        }\n        catch (error) {\n            console.error(error);\n        }\n\n        // Set email as a variable\n        // Add a random key to the logged in user's profile\n        // Send the email with the same random key\n        // When they click on the key it changes the key in the user's profile back to the students email address\n    }\n\n    return (\n\n        <>\n            <Nav/>\n            <main>\n                <form onSubmit={onSubmit}>\n                    <Input\n                        type=\"text\"\n                        id=\"student-email-input\"\n                        placeholder=\"Student Email\"\n                        label=\"Student Email\"\n                        handleInputChange={({ target: { value } }) => setStudentEmail(value)}\n                    />\n                    <button id='add-student' type=\"submit\" >\n                        Add Student\n                </button>\n                </form>\n                {invalidSubmission && (<div>Please enter a valid email</div>)}\n            </main>\n        </>\n    );\n\n\n};\n\n\nexport default Training;","import React from 'react'\nimport './style.css'\n\nconst AircraftDisplay = ({ aircraft }) => {\n\n    return (\n        <div className='tableBody'>\n            {\n                !!aircraft.length &&\n                aircraft.map((x, i) =>\n                    <div key={i + '-row'} id={x.id} className='tableRow'>\n                        <div className='aircraft' id={x.id}>{x.tailNumber} {x.description}</div>\n                    </div>)\n            }\n        </div>\n    )\n\n}\nexport default AircraftDisplay","import React from 'react';\nimport Input from '../Input/index';\nimport Button from '../Button/index';\nimport './style.css'\nimport Select from 'react-select'\n\n\nconst AddAircraft = ({ addT, setAircraft, value, handleFormInput }) => {\n\n    return (\n        <div>\n            <form>\n                <h4 className='header'>Aircraft Information</h4>\n                <div className='inputDiv'>\n                    <Input\n                        labelFor='tailNumber'\n                        label='tailNumber'\n                        name='tailNumber'\n                        type='tailNumber'\n                        inputId='tailNumber'\n                        inputClass='addFlightInput'\n                        placeholder='Tail Number'\n                        handleInputChange={handleFormInput}\n                        // value={value.tailNumber}\n                    />\n                    <Select\n                        options={value.allModels}\n                        labelFor='aircraftType'\n                        label='Aircraft Type'\n                        name='aircraftType'\n                        inputId='aircraftTypeInput'\n                        inputClass='addFlightInput dropdown'\n                        onChange={setAircraft}\n                    />\n                </div>\n                <div className='btnWrapper'>\n                    <Button\n                        text='Add Airplane'\n                        btnId='createAircraftBtn'\n                        className='formBtn'\n                        handleClick={addT}\n                    />\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default AddAircraft;","import React, { useState, useEffect } from 'react';\nimport Nav from '../components/Nav/index';\nimport API from '../utils/API';\nimport AircraftDisplay from '../components/AircraftDisplay/'\nimport Button from '../components/Button/index'\nimport AddAircraft from '../components/AddAircraftForm'\nimport UserContext from '../utils/UserContext';\nimport getAircraftTypesFunction from '../components/AircraftDisplay/function'\n\n\nconst Aircraft = () => {\n    const [state, setState] = useState({\n        open: false,\n        btnClicked: '',\n        userCurrentAircraft: [],\n        tailNumber: '',\n        modelId:0\n    });\n    const [user, setUser] = useState({\n        userId: ''\n    })\n\n    useEffect(() => {\n        getCurrentTypes()\n        getAllTypes()\n\n    }, [])\n\n    const getAllTypes = () => {\n        API.getAircraftModels()\n            .then(({ data }) => {\n                const formattedResults = data.map(x => ({\n                    value: x.id,\n                    label: x.manufacture_code + ' ' + x.description + ' ' + x.category_class\n                }))\n\n                setState(state => ({\n                    ...state,\n                    allModels: formattedResults\n                }))\n            })\n\n\n    }\n    const getCurrentTypes = () => {\n        API.getAircraftTypes()\n            .then(({ data }) => {\n                let rawResults = []\n                let filteredResults = []\n                let uniqueId = []\n                for (let i = 0; i < data.length; i++) {\n                    if (!uniqueId.includes(data[i].AircraftId)) {\n                        if (data[i]['Aircraft.tailNumber'] != null) {\n                            rawResults.push(data[i])\n                            uniqueId.push(data[i].AircraftId)\n                        }\n                    }\n\n                }\n\n\n                filteredResults = rawResults.map((a) => ({\n                    id: a.AircraftId,\n                    modelId: a['Aircraft.AircraftModel.id'],\n                    tailNumber: a['Aircraft.tailNumber'],\n                    description: a['Aircraft.AircraftModel.description'],\n                    category_class: a['Aircraft.AircraftModel.category_class'],\n                    // tailWheel:a['Aircraft.AircraftModel.tailWheel'],\n                    // highPerf:a['Aircraft.AircraftModel.highPerf'],\n                    // complex:a['Aircraft.AircraftModel.complex'],\n                    // taa:a['Aircraft.AircraftModel.taa'],\n                    // simulator:a['Aircraft.AircraftModel.simulator'],\n                    // designator: a['Aircraft.AircraftModel.tdesig'],\n\n\n                }))\n                let filteredResultsSorted = filteredResults.sort((a, b) => (a.tailNumber > b.tailNumber) ? 1 : ((b.tailNumber > a.tailNumber) ? -1 : 0))\n\n                setState(state => ({\n                    ...state,\n                    userCurrentAircraft: filteredResultsSorted\n                }))\n            })\n            .catch(console.error)\n    }\n    const handleFormInput = ({ target: { value, name } }) => {\n        setState(state => ({\n            ...state,\n            // date: new Date(),\n            [name]: value\n        }))\n        \n    };\n\n    const addTail = (event) => {\n        event.preventDefault()\n        API.createAircraft({\n            tailNumber: state.tailNumber,\n            AircraftModelId: state.modelId\n        })\n        .then((data) => {\n            console.log(state)\n            console.log(data)})\n        \n        .catch(console.error)\n    }\n\n    const setAircraft = (value) => {\n        setState(state =>({\n            ...state,\n            modelId: value.value\n        }))\n        \n    }\n\n    const switchFunc = arg => {\n        switch (arg) {\n            case 'Addaircraft':\n                return (\n                    <>\n                        <AddAircraft\n                            handleFormInput={handleFormInput}\n                            addT={addTail}\n                            value={state}\n                            setAircraft={setAircraft}\n                        />\n                    </>\n                )\n                break;\n            case 'modelBtn':\n                // console.log('totals', state.totals)\n                // getTotals()\n                // return (\n                // <TotalsDisplay\n                //     totals={state.totals}\n                // />\n                // )\n                break;\n            default:\n                return null;\n                break;\n        };\n    };\n\n    // const openModal = e => {\n    //     e.preventDefault();\n    //     const { target } = e;\n\n    //     setModal(prevModal => ({\n    //         ...prevModal,\n    //         open: !modal.open,\n    //         values: state.fullResults.find(x => parseInt(x.id) === parseInt(target.id))\n    //     }))\n    //     console.log(modal)\n    //     console.log(state)\n    // };\n\n    // const openEdit = id => {\n    //     console.log('open edit id', id)\n\n    //     const selected = state.fullResults\n    //         .find(x => parseInt(x.id) === id)\n    //     const newLog = {}\n\n    //     if (!selected) return;\n    //     Object.keys(logbookForm).forEach(key => { newLog[key] = selected[key] })\n    //     setlogbookForm(newLog)\n    //     setModal(prevModal => ({\n    //         ...prevModal,\n    //         open: !modal.open\n    //     }))\n    //     setState({\n    //         ...state,\n    //         open: true,\n    //         btnClicked: 'addFlightBtn'\n    //     })\n    // }\n\n    // const deleteBtn = id => {\n    //     // hit the delete flight route\n    //     API.deleteFlight(id)\n    //         .then(getFlights())\n    //         .catch(err => console.log(err))\n    //     // closes modal after flight is deleted\n    //     setModal(prevModal => ({\n    //         ...prevModal,\n    //         open: !modal.open\n    //     }))\n    // }\n    const openAccordion = e => {\n        const { target } = e\n        setState(state => ({\n            ...state,\n            open: !state.open,\n            btnClicked: target.id\n        }))\n    }\n    return (\n        <UserContext.Provider value={user}>\n            <Nav />\n            <div className='menuDiv'>\n                {/* here will be the buttons for this page. Maybe i'll make a component for these since there will be one on each page. */}\n                <Button\n                    text='Add Aircraft'\n                    btnId='Addaircraft'\n                    btnClass='menuBtn'\n                    handleClick={openAccordion}\n                />\n            </div>\n            <div className='formDiv'>\n                {\n                    !state.open\n                        ? null\n                        : (\n                            switchFunc(state.btnClicked)\n                        )\n                }\n            </div>\n            <AircraftDisplay aircraft={state.userCurrentAircraft} />\n\n        </UserContext.Provider>\n    );\n\n\n};\n\n\nexport default Aircraft;","import React from 'react';\nimport Input from '../Input/index';\nimport Button from '../Button/index';\nimport './style.css'\nimport Select from 'react-select'\n\n\nconst ViewAirport = ({ handleClick, handleFormInput }) => {\n\n    return (\n        <div>\n            \n                <div className='inputDiv'>\n                    <Input\n                        labelFor='airport'\n                        label='airport'\n                        name='airport'\n                        type='airport'\n                        inputId='airport'\n                        inputClass='addFlightInput'\n                        placeholder='Enter ICAO Identifier'\n                        handleInputChange={handleFormInput}\n                        onChange={handleFormInput}\n                        // value={value.tailNumber}\n                    />\n                    <Button\n                        text='Find Airport'\n                        btnId='viewAirport'\n                        className='formBtn'\n                        handleClick={handleClick}\n                    />\n                </div>\n                \n                \n                \n            \n        </div>\n    )\n}\n\nexport default ViewAirport;\n\n","\nimport React from 'react'\nimport GoogleMapReact from 'google-map-react'\n\n\nimport './map.css'\n\nconst getMapOptions = (maps) => {\n\n  return {\n      scaleControl: true,\n      gestureHandling: \"greedy\",\n      disableDoubleClickZoom: true,\n      minZoom: 11,\n      maxZoom: 17,\n\n      mapTypeControl: true,\n      mapTypeId: maps.MapTypeId.SATELLITE,\n      mapTypeControlOptions: {\n          style: maps.MapTypeControlStyle.HORIZONTAL_BAR,\n          position: maps.ControlPosition.BOTTOM_CENTER,\n          mapTypeIds: [\n              maps.MapTypeId.ROADMAP,\n              maps.MapTypeId.SATELLITE,\n              maps.MapTypeId.HYBRID\n          ]\n      },\n      zoomControl: true,\n  };\n}\n\n\nconst Map = ({ location, zoomLevel }) => (\n  \n  <div >\n    \n\n    <div style={{ height: '50vh', width: '100%' }}>\n      <GoogleMapReact\n        bootstrapURLKeys={{\n          key: ''}}\n        \n        center={location}\n        zoom={zoomLevel}\n        options={getMapOptions}\n      >\n      </GoogleMapReact>\n    </div>\n  </div>\n)\n\nexport default Map","import React, { useState, useEffect } from 'react';\nimport Nav from '../components/Nav/index';\nimport ViewAirport from '../components/ViewAirport'\nimport API from '../utils/API';\nimport Button from '../components/Button/index'\nimport UserContext from '../utils/UserContext';\nimport MapSection from '../components/map/Map' \nimport '../components/ViewAirport/style.css'\n\nconst Airports = () => {\n    const [state, setState] = useState({\n        open: 0,\n        btnClicked: '',\n        userCurrentAircraft: [],\n        airport: '',\n        modelId: 0,\n        google:'',\n        \n    });\n    const [user, setUser] = useState({\n        userId: ''\n    })\n\n    const handleFormInput = ({ target: { value, name } }) => {\n        setState(state => ({\n            ...state,\n            // date: new Date(),\n            airport: value\n        }))\n        // apiCall()  \n\n    };\n    const apiCall = () => {\n        API.getAirports({\n            airport: state.airport\n        })\n            .then(({ data }) => {\n                const formattedResults = data.map(a => ({\n                    icao: a.icao,\n                    name: a.name,\n                    iata: a.iata,\n                    city: a.city,\n                    state: a.state,\n                    country: a.country,\n                    lat: a.lat,\n                    long: a.lon,\n                    elevation: a.elevation\n\n                }))\n                console.log(formattedResults)\n                setState(state => ({\n                    ...state,\n                    airportInfo: formattedResults,\n                    open: true\n                }))\n            })\n            .catch(console.error)\n    }\n    \n    const printState = (data) => {\n        if (data.length === 0) {\n            return (\n                <div className=\"airport\">\n                    <h1>No Airport Found. Try again. </h1>\n                </div>\n            )\n        } else {\n            const location =[]\n            location.push(parseFloat(data[0].lat,10),\n            parseFloat(data[0].long,10))              \n              \n            return (\n                <>\n                <div className=\"airport\">\n                    <h1>{data[0].name}</h1>\n                    <h2>{data[0].city + ' ' + data[0].state + ' ' + data[0].country}</h2>\n                    <h2>Elevation: {data[0].elevation}</h2>\n                </div>\n                <div>\n                <MapSection \n                    location={location} \n                    zoomLevel={13} \n                    \n                    />\n                    \n                </div>\n                </>\n            )\n        }\n    }\n    const printNoAirport = () => {\n        return (\n            <div className=\"airport\">\n                <h1>Search for an airport by ICAO code</h1>\n            </div>\n        )\n\n    }\n\n    return (\n        <UserContext.Provider value={user}>\n            <Nav />\n            <div className='menuDiv'>\n                <ViewAirport\n                    handleFormInput={handleFormInput}\n                    handleClick={apiCall}\n                    value={state}\n\n                />\n            </div>\n            <div className='formDiv'>\n                {!state.open ? printNoAirport() : (printState(state.airportInfo))}\n            </div>\n\n\n        </UserContext.Provider>\n    );\n\n\n};\n\n\nexport default Airports;","import React from 'react';\nimport Nav from '../components/Nav/index';\n\n\nconst MyProfile = () => {\n\n    \n    return (\n        <>\n            <Nav/>\n            <div>\n                <h1>My Profile Coming Soon</h1>\n            </div>\n        </>\n    );\n\n    \n};\n\n\nexport default MyProfile;","import React from 'react';\nimport { Redirect, BrowserRouter, Route, Link } from 'react-router';\n// import React, { Component } from 'react';\n// import { Redirect } from 'react-router';\n// var Router = require('react-router');\n// import Input from '../components/Input';\n// import Nav from '../components/Nav/index';\nimport API from '../utils/API'\n// const express = require('express');\n// const path = require('path')\n// const sequelize = require(\"sequelize\");\n// import React, { useState, useEffect, Component } from 'react';\n// import Input from '../components/Input';\n// import Nav from '../components/Nav/index';\n// import API from '../utils/API'\n// import { Router } from 'express';\n\n const Validate  = (props) => {\n    // console.log(props.match.params.key)\n    API.userAccess({\n        key: props.match.params.key,\n        studentEmail: props.match.params.studentEmail\n    })\n   \n        \n        console.log(\"validate.js line 26-key\", props.match.params.key)\n        console.log(\"validate.js line 27-studentEmail\", props.match.params.studentEmail)\n        return(\n            <h1>Redirecting to home page</h1>\n            // <Redirect to=\"/training\" />\n        );\n        \n    \n\n}\n\nexport default Validate","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Signup from './pages/Signup';\nimport Logbook from './pages/Logbook';\nimport Training from './pages/Training';\nimport Aircraft from './pages/Aircraft';\nimport Airports from './pages/Airports';\nimport MyProfile from './pages/MyProfile';\nimport Redirect from './pages/Validate';\nimport './style.css'\n\n\n\nfunction App() {\n\n  return (\n\n    <Router>\n      <Switch>\n        <Route exact path='/' component={Signup} />\n        <Route exact path='/logbook' component={Logbook} />\n        <Route exact path='/training' component={Training} />\n        <Route exact path='/Aircraft' component={Aircraft} />\n        <Route exact path='/Airports' component={Airports} />\n        <Route exact path='/myProfile' component={MyProfile} />\n        <Route exact path='/redirect/:key/:studentEmail' component={Redirect} />\n      </Switch>\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if ((process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) || 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}